{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { lastValueFrom, map, startWith } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { FilterProjectAssigned } from '../../model/project/filterproject';\nimport { User } from '../../model/user/user';\nimport * as fs from 'file-saver';\nimport * as Excel from \"exceljs/dist/exceljs.min.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"../../services/project/project.service\";\nimport * as i3 from \"../../services/common/mastertable.service\";\nimport * as i4 from \"../../services/client/client.service\";\nimport * as i5 from \"../../services/person/person.service\";\nimport * as i6 from \"../../services/project/projecttype.service\";\nimport * as i7 from \"../../services/common/permiso.service\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/autocomplete\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/input\";\nconst _c0 = [\"table\"];\n\nfunction ReporteProyectosComponent_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r13.scodproject);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r13.scodproject, \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_mat_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r14.snameproject);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r14.snameproject, \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r15.nid_mastertable_type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r15.sshort_value, \"\");\n  }\n}\n\nfunction ReporteProyectosComponent_th_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 62);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mes_r16 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"colspan\", mes_r16[2][0].length + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.titleTable(mes_r16[0], mes_r16[1]), \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_ng_container_91_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"th\", 64);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const semana_r21 = ctx.$implicit;\n    const j_r22 = ctx.index;\n    const mes_r18 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r20.subTitleTable(semana_r21, mes_r18[2][1][j_r22]));\n  }\n}\n\nfunction ReporteProyectosComponent_ng_container_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ReporteProyectosComponent_ng_container_91_ng_container_1_Template, 3, 1, \"ng-container\", 54);\n    i0.ɵɵelementStart(2, \"th\", 63);\n    i0.ɵɵtext(3, \"Total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const mes_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", mes_r18[2][0]);\n  }\n}\n\nfunction ReporteProyectosComponent_div_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\", 65);\n    i0.ɵɵtext(3, \"No se encontraron resultados para la B\\u00FAsqueda\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction ReporteProyectosComponent_ng_template_95_tr_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 70);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const semana_r32 = ctx.$implicit;\n    const isLast_r34 = ctx.last;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c1, isLast_r34 ? \"yellow\" : \"none\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", semana_r32, \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_95_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ReporteProyectosComponent_ng_template_95_tr_1_ng_container_3_ng_container_1_Template, 3, 4, \"ng-container\", 54);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const mes_r29 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", mes_r29);\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_95_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 68);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ReporteProyectosComponent_ng_template_95_tr_1_ng_container_3_Template, 2, 1, \"ng-container\", 54);\n    i0.ɵɵelementStart(4, \"td\", 69);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r26 = ctx.$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r26.sperson, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r24.SemanasPorMeses(item_r26.nid_person));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r24.totalPorProyecto(item_r26.nid_person));\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_95_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 67);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const j_r39 = ctx.index;\n    const i_r36 = i0.ɵɵnextContext().index;\n    const ctx_r37 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r37.totalPorMes(i_r36, j_r39), \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_95_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ReporteProyectosComponent_ng_template_95_ng_container_5_ng_container_1_Template, 3, 1, \"ng-container\", 54);\n    i0.ɵɵelementStart(2, \"td\", 67);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const mes_r35 = ctx.$implicit;\n    const i_r36 = ctx.index;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", mes_r35[2][0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r25.totalPorMes(i_r36, mes_r35[2][0].length), \" \");\n  }\n}\n\nfunction ReporteProyectosComponent_ng_template_95_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, ReporteProyectosComponent_ng_template_95_tr_1_Template, 6, 3, \"tr\", 54);\n    i0.ɵɵelementStart(2, \"tr\")(3, \"td\", 66);\n    i0.ɵɵtext(4, \"Total General\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ReporteProyectosComponent_ng_template_95_ng_container_5_Template, 4, 2, \"ng-container\", 54);\n    i0.ɵɵelementStart(6, \"td\", 67);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(8, \"br\");\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.listaPersonas);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.semanas_meses);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.sumaTotalGeneral);\n  }\n}\n\nlet workbook = new Excel.Workbook();\nexport class person {\n  constructor() {\n    this.nid_person = 0;\n    this.sperson = \"\";\n  }\n\n}\nexport class ReporteProyectosComponent {\n  constructor(spinner, projectService, mastertableService, clientService, personService, projectTypeService, permisoService) {\n    this.spinner = spinner;\n    this.projectService = projectService;\n    this.mastertableService = mastertableService;\n    this.clientService = clientService;\n    this.personService = personService;\n    this.projectTypeService = projectTypeService;\n    this.permisoService = permisoService;\n    this.BreadLevel01 = 'Reportes';\n    this.Title = 'Reportes de horas por Proyecto';\n    this.listaPersonas = [];\n    this.filterProject = new FilterProjectAssigned();\n    this.user = new User();\n    this.currentPage = 1;\n    this.itemsPerPage = 999;\n    this.totalItems = 0;\n    this.listState = [];\n    this.listProjectHoursLog = [];\n    this.date1String = \"\";\n    this.date2String = \"\";\n    this.semanas_meses = [];\n    this.horas_registradas_proyecto = [];\n    this.sumaTotalGeneral = 0;\n    this.projectList = [];\n    this.listProjectFilter = [];\n    this.let_mes = new Map([[0, \"Enero\"], [1, \"Febrero\"], [2, \"Marzo\"], [3, \"Abril\"], [4, \"Mayo\"], [5, \"Junio\"], [6, \"Julio\"], [7, \"Agosto\"], [8, \"Septiembre\"], [9, \"Octubre\"], [10, \"Noviembre\"], [11, \"Diciembre\"]]);\n    this.personExt = new person();\n    this.myControl = new FormControl();\n    this.myControll = new FormControl();\n    this.inputNombreServicio = \"\";\n    this.permisoAdministrador = false;\n    this.permisoJefeDeProyecto = false;\n    this.filterProject.pagination.ItemsPerPage = this.itemsPerPage;\n    this.filterProject.pagination.TotalItems = this.totalItems;\n    this.filterProject.pagination.CurrentPage = this.currentPage;\n  }\n\n  ngOnInit() {\n    this.obtenerPermisos();\n\n    if (sessionStorage.getItem('Guard') !== null) {\n      this.user = JSON.parse(sessionStorage.getItem('User'));\n    }\n\n    this.codigoProyecto = this.myControl.valueChanges.pipe(startWith(''), map(val => this.filter(val)));\n    this.nombreProyecto = this.myControll.valueChanges.pipe(startWith(''), map(val => this.filter2(val)));\n  }\n\n  obtenerPermisos() {\n    this.permisoService.getpermissionbyuser(20).subscribe(response => {\n      console.log(\"permisos\", response);\n      response.forEach(element => {\n        if (element.sname == \"Permiso_Administrador\") {\n          this.permisoAdministrador = element.permission;\n        }\n\n        if (element.sname == \"Permiso_Jefe_Proyecto\") {\n          this.permisoJefeDeProyecto = element.permission;\n        }\n      });\n      this.getState();\n      this.getProjectTypeDropDown();\n      this.getProyectos();\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  ExportToExcel() {\n    const worksheet = workbook.addWorksheet('ReporteFacturacion', {\n      views: [{\n        showGridLines: false\n      }]\n    });\n    worksheet.getCell(\"A1\").value = \"Reporte de Horas de Proyecto\";\n    const cellA1 = worksheet.getCell(\"A3\");\n    cellA1.value = \"Codigo        Proyecto / Servicio\";\n    cellA1.alignment = {\n      vertical: 'middle',\n      horizontal: 'center',\n      wrapText: true\n    };\n    worksheet.getColumn('A').width = 18;\n    worksheet.getRow(3).height = 30;\n    worksheet.getCell(\"B3\").value = this.inputNombreServicio;\n    worksheet.getCell(\"B3\").alignment = {\n      vertical: 'middle'\n    }; // Cabecera de la tabla\n\n    worksheet.mergeCells(\"B5:B6\");\n    worksheet.getCell(\"B5\").value = \"Colaboradores\";\n    this.getStyleCabecera(worksheet.getCell(\"B5\"));\n    worksheet.getColumn('B').width = 40;\n    let column_mes_actual = 3;\n\n    for (let i = 0; i < this.semanas_meses.length; i++) {\n      let startCell = worksheet.getCell(5, column_mes_actual);\n      let endCell = worksheet.getCell(5, column_mes_actual + this.semanas_meses[i][2][0].length);\n      column_mes_actual += this.semanas_meses[i][2][0].length + 1;\n      this.getStyleCabecera(startCell);\n      startCell.value = this.titleTable(this.semanas_meses[i][0], this.semanas_meses[i][1]);\n      worksheet.mergeCells(startCell.address, endCell.address);\n    }\n\n    let column_mes_hijo_actual = 3;\n\n    for (let i = 0; i < this.semanas_meses.length; i++) {\n      for (let j = 0; j < this.semanas_meses[i][2][0].length; j++) {\n        let cell = worksheet.getCell(6, column_mes_hijo_actual);\n        column_mes_hijo_actual++;\n        cell.value = this.subTitleTable(this.semanas_meses[i][2][0][j], this.semanas_meses[i][2][1][j]);\n        this.getStyleCabecera(cell, 1);\n      }\n\n      let cellTotalMes = worksheet.getCell(6, column_mes_hijo_actual);\n      column_mes_hijo_actual++;\n      cellTotalMes.value = \"Total \" + this.let_mes.get(this.semanas_meses[i][0]);\n      this.getStyleCabecera(cellTotalMes);\n    }\n\n    worksheet.getColumn(column_mes_hijo_actual).width = 13;\n    let startColumnTotalGeneral = worksheet.getCell(5, column_mes_hijo_actual);\n    let endColumnTotalGeneral = worksheet.getCell(6, column_mes_hijo_actual);\n    startColumnTotalGeneral.value = \"Total General\";\n    this.getStyleCabecera(startColumnTotalGeneral);\n    worksheet.mergeCells(startColumnTotalGeneral.address, endColumnTotalGeneral.address); // Cuerpo de la tabla\n\n    let rowColaborador = 7;\n\n    for (let i = 0; i < this.listaPersonas.length; i++) {\n      let cellColaborador = worksheet.getCell(rowColaborador, 2);\n      cellColaborador.value = this.listaPersonas[i].sperson;\n\n      if (i == this.listaPersonas.length - 1) {\n        this.getStyleColaborador(cellColaborador, 1);\n      } else {\n        this.getStyleColaborador(cellColaborador);\n      }\n\n      let rowValorSemana = 3;\n      let semanaporMeses = this.SemanasPorMeses(this.listaPersonas[i].nid_person);\n\n      for (let j = 0; j < semanaporMeses.length; j++) {\n        for (let k = 0; k < semanaporMeses[j].length; k++) {\n          let cellValorSemana = worksheet.getCell(rowColaborador, rowValorSemana);\n          cellValorSemana.value = semanaporMeses[j][k];\n\n          if (i == this.listaPersonas.length - 1) {\n            if (k == semanaporMeses[j].length - 1) {\n              this.getStyleValorTotalPorMes(cellValorSemana, 1);\n            } else {\n              this.getStyleValorSemana(cellValorSemana, 1);\n            }\n          } else {\n            if (k == semanaporMeses[j].length - 1) {\n              this.getStyleValorTotalPorMes(cellValorSemana);\n            } else {\n              this.getStyleValorSemana(cellValorSemana);\n            }\n          }\n\n          rowValorSemana++;\n        }\n      }\n\n      let valorTotalProyecto = worksheet.getCell(rowColaborador, rowValorSemana);\n      valorTotalProyecto.value = this.totalPorProyecto(this.listaPersonas[i].nid_person);\n\n      if (i == this.listaPersonas.length - 1) {\n        this.getStyleTotalGeneral(valorTotalProyecto, 1);\n      } else {\n        this.getStyleTotalGeneral(valorTotalProyecto);\n      }\n\n      rowColaborador++;\n    } // Descargar archivo\n\n\n    workbook.xlsx.writeBuffer().then(buffer => {\n      workbook.removeWorksheet(worksheet.id);\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      fs.saveAs(blob, 'ReportePorProyecto.xlsx');\n    });\n  }\n\n  getStyleCabecera(cell, option) {\n    cell.fill = {\n      type: 'pattern',\n      pattern: 'solid',\n      fgColor: {\n        argb: 'ff022a5b'\n      }\n    };\n    cell.font = {\n      color: {\n        argb: 'ffffff'\n      },\n      bold: true\n    };\n    cell.alignment = {\n      horizontal: 'center',\n      vertical: 'middle'\n    };\n\n    if (!option) {\n      cell.border = {\n        top: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    } else {\n      cell.border = {\n        top: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    }\n  }\n\n  getStyleValorSemana(cell, option) {\n    cell.alignment = {\n      horizontal: 'center'\n    };\n\n    if (option) {\n      cell.border = {\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    }\n  }\n\n  getStyleValorTotalPorMes(cell, option) {\n    cell.alignment = {\n      horizontal: 'center'\n    };\n\n    if (!option) {\n      cell.border = {\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    } else {\n      cell.border = {\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    }\n  }\n\n  getStyleTotalGeneral(cell, option) {\n    cell.alignment = {\n      horizontal: 'center'\n    };\n\n    if (!option) {\n      cell.border = {\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    } else {\n      cell.border = {\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    }\n  }\n\n  getStyleColaborador(cell, option) {\n    if (!option) {\n      cell.border = {\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    } else {\n      cell.border = {\n        left: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        right: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        },\n        bottom: {\n          style: 'thin',\n          color: {\n            argb: '000000'\n          }\n        }\n      };\n    }\n  }\n\n  fisrtChange() {\n    this.myControl.setValue(\"\");\n    this.myControll.setValue(\"\");\n  }\n\n  changeNombreServicio() {\n    let proyecto = this.projectList.find(project => project.snameproject == this.inputNombreServicio);\n\n    if (proyecto !== null && proyecto !== undefined) {\n      this.filterProject.scodproject = proyecto.scodproject;\n    }\n  }\n\n  changeCodigoServicio() {\n    console.log(this.filterProject.scodproject);\n    let proyecto = this.projectList.find(project => project.scodproject == this.filterProject.scodproject);\n    console.log(\"A ver\", proyecto);\n\n    if (proyecto !== null && proyecto !== undefined) {\n      this.inputNombreServicio = proyecto.snameproject;\n    }\n  }\n\n  changeEstado() {\n    if (this.filterProject.nid_status == 0) {\n      this.listProjectFilter = this.projectList;\n    } else {\n      let cadena = this.listState.find(stado => stado.nid_mastertable_type == this.filterProject.nid_status).sshort_value.toUpperCase();\n      this.listProjectFilter = this.projectList.filter(proyecto => proyecto.sstatusname.toUpperCase() == cadena);\n    }\n\n    this.myControl.setValue(\"\");\n    this.myControll.setValue(\"\");\n  }\n\n  filter(val) {\n    return this.listProjectFilter.filter(project => project.scodproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n  filter2(val) {\n    return this.listProjectFilter.filter(project => project.snameproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n  getProyectos() {\n    this.filterProject.nid_manager = 0;\n    this.filterProject.nid_status = 0;\n\n    if (this.permisoAdministrador) {\n      this.filterProject.nid_manager = 0;\n      this.filterProject.nid_person = 0;\n    } else {\n      this.filterProject.nid_manager = 0;\n      this.filterProject.nid_person = this.user.nid_person;\n    }\n\n    this.spinner.show();\n    this.projectService.getassignedprojectpagination(this.filterProject).subscribe(res => {\n      try {\n        if (res == null) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Ocurrió un error al obtener los registros.' //text: 'Por favor, escríbenos a la siguiente dirección: ' +'comercial@crecerseguros.pe. Nuestro ejecutivo comercial se contactará contigo'\n\n          });\n        }\n\n        this.spinner.hide();\n        this.projectList = res.data;\n        this.listProjectFilter = res.data;\n        this.fisrtChange();\n        this.totalItems = res.pagination.totalItems;\n      } catch (e) {\n        this.spinner.hide();\n        this.projectList = null;\n        this.totalItems = 0;\n      }\n    });\n  }\n\n  getState() {\n    this.spinner.show('SpinnerProject'); //let idFather=this.listCategory.find(x=>x.nid_mastertable_type==id).nid_mastertable;\n\n    this.mastertableService.getmastertable(50).subscribe(response => {\n      this.listState = response;\n      this.listState = this.listState.filter(x => x.sshort_value == \"ACTIVO\" || x.sshort_value == \"CERRADO\");\n      this.spinner.hide('SpinnerProject');\n    }, error => {\n      console.error(error);\n      this.spinner.hide('SpinnerProject');\n    });\n  }\n\n  getClientDropDown() {\n    this.spinner.show('SpinnerProject');\n    this.clientService.getDropdownlist(0).subscribe(response => {\n      if (response == null) {\n        this.filterProject.nid_client = 0;\n        return;\n      }\n\n      this.ClientDropDownList = response;\n\n      if (this.ClientDropDownList.length > 0) {\n        this.filterProject.nid_client = 0;\n      }\n\n      this.spinner.hide('SpinnerProject');\n    }, error => {\n      console.error(error);\n      this.spinner.hide('SpinnerProject');\n    });\n  }\n\n  getProjectTypeDropDown() {\n    this.spinner.show('SpinnerProject');\n    this.projectTypeService.getDropdownlist().subscribe(response => {\n      if (response == null) {\n        this.filterProject.nid_project_type = 0;\n        return;\n      }\n\n      this.ProjectTypeDropDownList = response;\n\n      if (this.ProjectTypeDropDownList.length > 0) {\n        this.filterProject.nid_project_type = 0;\n      }\n\n      this.spinner.hide('SpinnerProject');\n    }, error => {\n      console.error(error);\n      this.spinner.hide('SpinnerProject');\n    });\n  }\n\n  search() {\n    console.log(this.filterProject.scodproject);\n    let scodproject = this.filterProject.scodproject;\n    let actualDay = new Date();\n    this.date1String = actualDay.getFullYear() + \"-\" + String(actualDay.getMonth() + 1).padStart(2, '0');\n    this.date2String = actualDay.getFullYear() + \"-\" + String(actualDay.getMonth() + 1).padStart(2, '0');\n    this.generateArregloSemanas();\n  }\n\n  obtenerHorasRegistradas(scodproject) {\n    // Obtener los estimados\n    var projectEstimate = lastValueFrom(this.projectService.getprojectestimate(scodproject, 2)); // Obtener horas registradas\n\n    var horasRegistradas = lastValueFrom(this.projectService.getprojecthourslog(scodproject));\n    console.log(horasRegistradas); // Obtener horas registradas de personal externo y proveedores\n\n    var horasRegistradasExt = lastValueFrom(this.projectService.getprojecthoursext(scodproject));\n    Promise.all([projectEstimate, horasRegistradas, horasRegistradasExt]).then(value => {\n      this.horas_registradas_proyecto = [];\n      this.sumaTotalGeneral = 0; // Las personas estimadas\n\n      if (value[0] === null || value[0] === undefined) {\n        Swal.fire('Error', \"No hay personal asignado a este proyecto\", 'info');\n        return;\n      }\n\n      this.listaPersonas = value[0]; // Las horas registradas\n\n      let horasRegistradas = value[1];\n\n      if (horasRegistradas === null || horasRegistradas === undefined) {\n        //No existen horas registradas en el proyecto\n        Swal.fire('Advertencia', \"No hay horas registradas en este proyecto\", 'info');\n        return;\n      }\n\n      let horasRegistradasExt = value[2];\n      console.log(horasRegistradasExt);\n\n      if (horasRegistradasExt != null && horasRegistradasExt != undefined) {\n        horasRegistradasExt.forEach(valueh => {\n          horasRegistradas.push(valueh); //if valuex.nid_person no esta dentro de listpersonas\n          //entonces listpersonas.push (new object(nid_person:valuex.nid_person,sperson:valuex.sperson))\n\n          let fila = this.listaPersonas.find(x => x.nid_person == valueh.nid_person);\n          console.log(fila);\n\n          if (fila == null || fila == undefined) {\n            this.personExt.nid_person = valueh.nid_person;\n            this.personExt.sperson = valueh.sperson;\n            this.listaPersonas.push(this.personExt);\n            this.personExt = new person();\n          }\n        });\n        console.log(horasRegistradas);\n      } // Filtro las horas aprobadas\n\n\n      let listHorasRegistradas = horasRegistradas.filter(x => x.sstate == \"A\");\n      console.log(listHorasRegistradas);\n\n      if (listHorasRegistradas === null || listHorasRegistradas === undefined) {\n        Swal.fire('Adventencia', \"No hay horas aprobadas en este proyecto\", 'info');\n        return;\n      }\n\n      this.listaPersonas.forEach(personal => {\n        let listHorasRegistradasPersonal = listHorasRegistradas.filter(x => x.nid_person == personal.nid_person);\n        let arregloSemana = this.obtenerHorasPorSemana(listHorasRegistradasPersonal);\n        this.horas_registradas_proyecto.push([personal.nid_person, arregloSemana]);\n      });\n    });\n  }\n\n  inicializarMatriz() {\n    let arreglo_mes = [];\n    let cantidad_meses = this.semanas_meses.length; // Inicializo todo en 0\n\n    for (let i = 0; i < cantidad_meses; i++) {\n      arreglo_mes[i] = [];\n\n      for (let j = 0; j < this.semanas_meses[i][2][0].length; j++) {\n        arreglo_mes[i][j] = 0;\n      } // este va ser el total\n\n\n      arreglo_mes[i][this.semanas_meses[i][2][0].length] = 0;\n    }\n\n    return arreglo_mes;\n  }\n\n  obtenerHorasPorSemana(listHorasRegistradas) {\n    let arreglo_mes = this.inicializarMatriz();\n    listHorasRegistradas.forEach(horaRegistrada => {\n      let registrationDate = new Date(horaRegistrada.dregistration_date);\n      let horasRegistradas = horaRegistrada.nnumber_hours;\n      let resp = this.obtenerMatrizHorasProjecto(registrationDate);\n\n      if (resp != null) {\n        arreglo_mes[resp[0]][resp[1]] += horasRegistradas; // Sumando a la ultima posicion la cual es el total de la semana\n\n        arreglo_mes[resp[0]][this.semanas_meses[resp[0]][2][0].length] += horasRegistradas; // Sumando al total General\n\n        this.sumaTotalGeneral += horasRegistradas;\n      }\n    });\n    return arreglo_mes;\n  }\n\n  obtenerMatrizHorasProjecto(registrationDate) {\n    let index_mes = 0;\n    let semana_pertenece = -1;\n\n    for (let mes of this.semanas_meses) {\n      // Primero tengo que ver a que mes corresponde\n      if (mes[0] == registrationDate.getMonth() && mes[1] == registrationDate.getFullYear()) {\n        // Si pertenece a este mes, tengo que ver a que semana pertenece\n        semana_pertenece = this.perteneceSemana(registrationDate, mes[2][0], mes[2][1]);\n        break;\n      }\n\n      index_mes++;\n    }\n\n    ;\n\n    if (semana_pertenece != null && semana_pertenece != -1) {\n      return [index_mes, semana_pertenece];\n    } else {\n      return null;\n    }\n  }\n\n  perteneceSemana(fechaIni, listSemanasStart, listSemanasFinish) {\n    let semana_pertenece = -1; // TODO: VERIFICAR QUE LAS HORAS REGISTRADAS SIEMPRE VUELVAN CON HORAS_MINUTOS_SEGUNDOS_MILISEGUNDOS EN 0\n\n    for (let i = 0; i < listSemanasFinish.length; i++) {\n      if (fechaIni >= listSemanasStart[i] && fechaIni <= listSemanasFinish[i]) {\n        semana_pertenece = i;\n        break;\n      }\n    }\n\n    if (semana_pertenece == -1) {\n      console.log(\"No pertence a ninguna semana\", fechaIni, listSemanasStart);\n      return null;\n    }\n\n    return semana_pertenece;\n  }\n\n  generateArregloSemanas() {\n    if (!this.thereAreProjectsLoad) {\n      return null;\n    }\n\n    let start = new Date(this.date1String);\n    start.setDate(start.getDate() + 1);\n    let finish = new Date(this.date2String);\n    finish.setDate(finish.getDate() + 1);\n    console.log(start, finish);\n    this.semanas_meses = [];\n\n    while (start <= finish) {\n      let fechaIni = new Date(start);\n      let extraDay = 0;\n\n      if (fechaIni.getDay() == 0) {\n        extraDay = 1;\n      }\n\n      if (fechaIni.getDay() == 6) {\n        extraDay = 2;\n      }\n\n      fechaIni.setDate(fechaIni.getDate() + extraDay);\n      fechaIni.setMilliseconds(0);\n      fechaIni.setSeconds(0);\n      fechaIni.setMinutes(0);\n      fechaIni.setHours(0);\n      let semanas_mes = this.generateArregloMonth(fechaIni); // [mes(number), año(number), semanas(arreglo, [0]= inicio semana, [1]= fin semana)]\n\n      this.semanas_meses.push([start.getMonth(), start.getFullYear(), semanas_mes]);\n      start.setMonth(start.getMonth() + 1);\n    }\n\n    this.obtenerHorasRegistradas(this.filterProject.scodproject);\n  }\n\n  generateArregloMonth(fechaIni) {\n    let listSemanasStart = [];\n    let listSemanasFinish = [];\n    let fechaFin; // Si la semana empieza miercoles la fecha fin de esta semana termina en 3 dias, sabado\n    // En el primero no hay ningun problema porque siempre empieza el primero de cada mes por lo que es imposible que cambie de mes en un + dateuno\n\n    let dateuno = 6 - fechaIni.getDay();\n    fechaFin = new Date(fechaIni);\n    fechaFin.setDate(fechaFin.getDate() + dateuno);\n    let abc = new Date(fechaIni.setDate(fechaIni.getDate() + 0));\n    let abd = new Date(fechaFin.setDate(fechaFin.getDate() + 0));\n    listSemanasStart.push(abc);\n    listSemanasFinish.push(abd);\n    let newDate = new Date(fechaIni.getFullYear(), fechaIni.getMonth() + 1, 0); // newDate.setDate(newDate.getDate() + 1);\n\n    let primeraIteracion = true;\n\n    while (fechaFin <= newDate) {\n      // Si entra es porque fechaFin aun no es menor que newDate\n      let abc;\n\n      if (primeraIteracion) {\n        let sumarPrimeraIteracion = 8 - fechaIni.getDay();\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + sumarPrimeraIteracion));\n        primeraIteracion = false;\n      } else {\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + 7));\n      }\n\n      let abd;\n\n      if (abc <= newDate) {\n        abd = new Date(fechaFin.setDate(fechaFin.getDate() + 7));\n\n        if (abd <= newDate) {\n          listSemanasStart.push(abc);\n          listSemanasFinish.push(abd);\n        } else {\n          let abd2 = new Date(fechaFin.setDate(fechaFin.getDate() - 7));\n\n          while (abd2 < newDate) {\n            // Mientras que sea menor, para que en la ultima iteracion quede igual\n            abd2.setDate(abd2.getDate() + 1);\n          }\n\n          listSemanasStart.push(abc);\n          listSemanasFinish.push(abd2);\n        }\n      } else {\n        // Ya no deberia entrar a otra semana si es mayor que el newdate\n        fechaFin.setDate(fechaFin.getDate() + 1);\n      }\n    }\n\n    return [listSemanasStart, listSemanasFinish];\n  }\n\n  titleTable(mes, anio) {\n    return this.let_mes.get(mes) + \"-\" + anio;\n  }\n\n  subTitleTable(ini, fin) {\n    return ('0' + ini.getDate()).slice(-2) + \"-\" + ('0' + fin.getDate()).slice(-2);\n  }\n\n  thereAreProjectsLoad() {\n    if (typeof this.listaPersonas === 'undefined') return false;\n    if (this.listaPersonas === null) return false;\n    if (this.listaPersonas.length === 0) return false;\n    return true;\n  }\n\n  SemanasPorMeses(nid_person) {\n    let proyecto = this.horas_registradas_proyecto.find(x => x[0] == nid_person);\n\n    if (proyecto !== null && proyecto !== undefined) {\n      return proyecto[1];\n    }\n\n    return null;\n  }\n\n  totalPorProyecto(nid_person) {\n    let suma = 0;\n    let proyecto = this.horas_registradas_proyecto.find(x => x[0] == nid_person);\n\n    if (proyecto === null || proyecto === undefined) {\n      return 0;\n    }\n\n    let arreglo_Semanas = proyecto[1];\n\n    for (let i = 0; i < arreglo_Semanas.length; i++) {\n      suma += arreglo_Semanas[i][arreglo_Semanas[i].length - 1];\n    }\n\n    return suma;\n  }\n\n  totalPorMes(i, j) {\n    let suma = 0;\n    this.horas_registradas_proyecto.forEach(item => {\n      if (item && item[1] && item[1].length > 0 && item[1][i] && item[1][i][j]) {\n        suma += item[1][i][j];\n      }\n    });\n    return suma;\n  }\n\n}\n\nReporteProyectosComponent.ɵfac = function ReporteProyectosComponent_Factory(t) {\n  return new (t || ReporteProyectosComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.MastertableService), i0.ɵɵdirectiveInject(i4.ClientService), i0.ɵɵdirectiveInject(i5.PersonService), i0.ɵɵdirectiveInject(i6.ProjectTypeService), i0.ɵɵdirectiveInject(i7.PermisoService));\n};\n\nReporteProyectosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReporteProyectosComponent,\n  selectors: [[\"app-reporte-proyectos\"]],\n  viewQuery: function ReporteProyectosComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  decls: 100,\n  vars: 27,\n  consts: [[1, \"app-content\", \"content\", \"bg-white\"], [1, \"content-wrapper\"], [1, \"content-header\", \"row\"], [1, \"content-header-left\", \"col-md-6\", \"col-12\"], [1, \"content-header-title\"], [1, \"row\", \"breadcrumbs-top\"], [1, \"breadcrumb-wrapper\", \"col-12\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/manage/inicio\"], [\"routerLink\", \"/manage/indicador-gestion\"], [1, \"breadcrumb-item\", \"active\"], [1, \"content-body\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"heading-elements-toggle\"], [1, \"la\", \"la-ellipsis-v\", \"font-medium-3\"], [1, \"card-content\", \"collapse\", \"show\"], [1, \"card-body\"], [1, \"form-group\", \"col-md-2\", \"col-sm-12\"], [2, \"width\", \"100%\"], [\"type\", \"text\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"ngModel\", \"matAutocomplete\", \"ngModelChange\", \"change\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [\"style\", \"font-size:12px\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"col-md-3\", \"col-sm-12\"], [\"type\", \"text\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\", \"ngModel\", \"ngModelChange\", \"change\"], [2, \"width\", \"300px\", 3, \"optionSelected\"], [\"auto2\", \"matAutocomplete\"], [\"required\", \"\", 1, \"select2\", \"form-control\", \"block\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-2\", \"col-sm-12\"], [1, \"form-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"btn-active\", 3, \"click\"], [1, \"la\", \"la-search\"], [\"type\", \"button\", 1, \"btn\", 2, \"padding\", \"0\", \"border\", \"none\", \"background\", \"transparent\", 3, \"click\"], [\"src\", \"../../../../../assets/images/icons/excel1.png\", 2, \"width\", \"24px\", \"height\", \"24px\"], [1, \"col-4\", \"input-group\"], [\"type\", \"month\", 1, \"form-control\", 2, \"margin-right\", \"15px\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"type\", \"month\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [1, \"col-12\"], [1, \"card-body\", \"card-dashboard\"], [1, \"form-group\", 2, \"overflow-x\", \"scroll\"], [1, \"col-md-12\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-bordered\", 2, \"table-layout\", \"fixed\"], [\"table\", \"\"], [\"scope\", \"col\", 2, \"text-align\", \"center\", \"width\", \"200px\"], [\"style\", \"text-align: center;width: 300px;\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\", 2, \"text-align\", \"center\", \"width\", \"60px\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"NoexistenRegistro\", \"\"], [\"MostrarRegistro\", \"\"], [\"name\", \"SpinnerProject\", \"bdColor\", \"rgba(51,51,51,0.8)\", \"size\", \"large\", \"color\", \"#fff\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [2, \"font-size\", \"12px\", 3, \"value\"], [3, \"value\"], [2, \"text-align\", \"center\", \"width\", \"300px\"], [2, \"text-align\", \"center\", \"width\", \"60px\"], [2, \"text-align\", \"center\", \"width\", \"100px\"], [\"colspan\", \"1\", 2, \"text-align\", \"center\"], [2, \"text-align\", \"center\", \"width\", \"110px\", \"background-color\", \"#0e3555\", \"color\", \"white\"], [2, \"text-align\", \"right\", \"width\", \"110px\", \"background-color\", \"#0e3555\", \"color\", \"white\"], [2, \"text-align\", \"center\", \"width\", \"200px\"], [2, \"text-align\", \"right\", \"width\", \"60px\"], [2, \"text-align\", \"right\", \"width\", \"110px\", 3, \"ngStyle\"]],\n  template: function ReporteProyectosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"ol\", 7)(9, \"li\", 8)(10, \"a\", 9);\n      i0.ɵɵtext(11, \"Inicio\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"li\", 8)(13, \"a\", 10);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"li\", 11);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13)(19, \"div\", 14)(20, \"div\", 15)(21, \"div\", 16)(22, \"h4\", 17);\n      i0.ɵɵtext(23, \" FILTROS \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 18);\n      i0.ɵɵelement(25, \"i\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 20)(27, \"div\", 21)(28, \"div\", 13)(29, \"div\", 22)(30, \"label\");\n      i0.ɵɵtext(31, \" C\\u00F3digo Proyecto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-form-field\", 23)(33, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteProyectosComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.filterProject.scodproject = $event;\n      })(\"change\", function ReporteProyectosComponent_Template_input_change_33_listener() {\n        return ctx.changeCodigoServicio();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-autocomplete\", 25, 26);\n      i0.ɵɵlistener(\"optionSelected\", function ReporteProyectosComponent_Template_mat_autocomplete_optionSelected_34_listener() {\n        return ctx.changeCodigoServicio();\n      });\n      i0.ɵɵtemplate(36, ReporteProyectosComponent_mat_option_36_Template, 2, 2, \"mat-option\", 27);\n      i0.ɵɵpipe(37, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 28)(39, \"label\");\n      i0.ɵɵtext(40, \" Nombre Proyecto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"mat-form-field\", 23)(42, \"input\", 29);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteProyectosComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.inputNombreServicio = $event;\n      })(\"change\", function ReporteProyectosComponent_Template_input_change_42_listener() {\n        return ctx.changeNombreServicio();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"mat-autocomplete\", 30, 31);\n      i0.ɵɵlistener(\"optionSelected\", function ReporteProyectosComponent_Template_mat_autocomplete_optionSelected_43_listener() {\n        return ctx.changeNombreServicio();\n      });\n      i0.ɵɵtemplate(45, ReporteProyectosComponent_mat_option_45_Template, 2, 2, \"mat-option\", 27);\n      i0.ɵɵpipe(46, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 22)(48, \"label\");\n      i0.ɵɵtext(49, \" Estado \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"select\", 32);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteProyectosComponent_Template_select_ngModelChange_50_listener($event) {\n        return ctx.filterProject.nid_status = $event;\n      })(\"change\", function ReporteProyectosComponent_Template_select_change_50_listener() {\n        return ctx.changeEstado();\n      });\n      i0.ɵɵelementStart(51, \"option\", 33);\n      i0.ɵɵtext(52, \"-- Seleccione --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(53, ReporteProyectosComponent_option_53_Template, 2, 2, \"option\", 34);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 35)(55, \"div\", 36)(56, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function ReporteProyectosComponent_Template_button_click_56_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelement(57, \"i\", 38);\n      i0.ɵɵtext(58, \"\\u00A0Consultar \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"div\", 35)(60, \"div\", 36)(61, \"button\", 39);\n      i0.ɵɵlistener(\"click\", function ReporteProyectosComponent_Template_button_click_61_listener() {\n        return ctx.ExportToExcel();\n      });\n      i0.ɵɵelement(62, \"img\", 40);\n      i0.ɵɵtext(63, \" \\u00A0Exportar \");\n      i0.ɵɵelementEnd()()()()()()()()();\n      i0.ɵɵelementStart(64, \"div\", 13)(65, \"div\", 41)(66, \"input\", 42);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteProyectosComponent_Template_input_ngModelChange_66_listener($event) {\n        return ctx.date1String = $event;\n      })(\"blur\", function ReporteProyectosComponent_Template_input_blur_66_listener() {\n        return ctx.generateArregloSemanas();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"input\", 43);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteProyectosComponent_Template_input_ngModelChange_67_listener($event) {\n        return ctx.date2String = $event;\n      })(\"blur\", function ReporteProyectosComponent_Template_input_blur_67_listener() {\n        return ctx.generateArregloSemanas();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(68, \"div\", 44)(69, \"div\", 15)(70, \"div\", 16)(71, \"h4\", 17);\n      i0.ɵɵtext(72, \"Lista de Resultado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"a\", 18);\n      i0.ɵɵelement(74, \"i\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(75, \"div\", 20)(76, \"div\", 45)(77, \"div\", 13)(78, \"div\", 46)(79, \"div\", 47)(80, \"div\", 48)(81, \"table\", 49, 50)(83, \"thead\")(84, \"tr\")(85, \"th\", 51);\n      i0.ɵɵtext(86, \"Personal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(87, ReporteProyectosComponent_th_87_Template, 2, 2, \"th\", 52);\n      i0.ɵɵelementStart(88, \"th\", 53);\n      i0.ɵɵtext(89, \"Total\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(90, \"tr\");\n      i0.ɵɵtemplate(91, ReporteProyectosComponent_ng_container_91_Template, 4, 1, \"ng-container\", 54);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(92, ReporteProyectosComponent_div_92_Template, 1, 0, \"div\", 55);\n      i0.ɵɵtemplate(93, ReporteProyectosComponent_ng_template_93_Template, 4, 0, \"ng-template\", null, 56, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(95, ReporteProyectosComponent_ng_template_95_Template, 9, 3, \"ng-template\", null, 57, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()()()()()()()()()()()()();\n      i0.ɵɵelementStart(97, \"ngx-spinner\", 58)(98, \"p\", 59);\n      i0.ɵɵtext(99, \"Please Wait. \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(35);\n\n      const _r2 = i0.ɵɵreference(44);\n\n      const _r9 = i0.ɵɵreference(94);\n\n      const _r11 = i0.ɵɵreference(96);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.Title);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.BreadLevel01);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.Title, \" \");\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"ngModel\", ctx.filterProject.scodproject)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(37, 23, ctx.codigoProyecto));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControll)(\"matAutocomplete\", _r2)(\"ngModel\", ctx.inputNombreServicio);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(46, 25, ctx.nombreProyecto));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.filterProject.nid_status);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listState);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.date1String);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.date2String);\n      i0.ɵɵadvance(18);\n      i0.ɵɵattribute(\"rowspan\", 2);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.semanas_meses);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"rowspan\", 2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.semanas_meses);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.thereAreProjectsLoad())(\"ngIfThen\", _r9)(\"ngIfElse\", _r11);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"fullScreen\", true);\n    }\n  },\n  dependencies: [i8.RouterLinkWithHref, i9.NgForOf, i9.NgIf, i9.NgStyle, i10.NgSelectOption, i10.ɵNgSelectMultipleOption, i10.DefaultValueAccessor, i10.SelectControlValueAccessor, i10.NgControlStatus, i10.RequiredValidator, i10.NgModel, i10.FormControlDirective, i1.NgxSpinnerComponent, i11.MatAutocomplete, i11.MatAutocompleteTrigger, i12.MatOption, i13.MatFormField, i14.MatInput, i9.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXBvcnRlLXByb3llY3Rvcy5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","FormControl","lastValueFrom","map","startWith","Swal","FilterProjectAssigned","User","fs","Excel","i0","workbook","Workbook","person","constructor","ReporteProyectosComponent","spinner","projectService","mastertableService","clientService","personService","projectTypeService","permisoService","Map","filterProject","pagination","ItemsPerPage","itemsPerPage","TotalItems","totalItems","CurrentPage","currentPage","ngOnInit","obtenerPermisos","sessionStorage","getItem","user","JSON","parse","codigoProyecto","myControl","valueChanges","pipe","val","filter","nombreProyecto","myControll","filter2","getpermissionbyuser","subscribe","response","console","log","forEach","element","sname","permisoAdministrador","permission","permisoJefeDeProyecto","getState","getProjectTypeDropDown","getProyectos","error","ExportToExcel","worksheet","addWorksheet","views","showGridLines","getCell","value","cellA1","alignment","vertical","horizontal","wrapText","getColumn","width","getRow","height","inputNombreServicio","mergeCells","getStyleCabecera","column_mes_actual","i","semanas_meses","length","startCell","endCell","titleTable","address","column_mes_hijo_actual","j","cell","subTitleTable","cellTotalMes","let_mes","get","startColumnTotalGeneral","endColumnTotalGeneral","rowColaborador","listaPersonas","cellColaborador","sperson","getStyleColaborador","rowValorSemana","semanaporMeses","SemanasPorMeses","nid_person","k","cellValorSemana","getStyleValorTotalPorMes","getStyleValorSemana","valorTotalProyecto","totalPorProyecto","getStyleTotalGeneral","xlsx","writeBuffer","then","buffer","removeWorksheet","id","blob","Blob","type","saveAs","option","fill","pattern","fgColor","argb","font","color","bold","border","top","style","bottom","left","right","fisrtChange","setValue","changeNombreServicio","proyecto","projectList","find","project","snameproject","undefined","scodproject","changeCodigoServicio","changeEstado","nid_status","listProjectFilter","cadena","listState","stado","nid_mastertable_type","sshort_value","toUpperCase","sstatusname","toLowerCase","indexOf","nid_manager","show","getassignedprojectpagination","res","fire","icon","title","hide","data","e","getmastertable","x","getClientDropDown","getDropdownlist","nid_client","ClientDropDownList","nid_project_type","ProjectTypeDropDownList","search","actualDay","Date","date1String","getFullYear","String","getMonth","padStart","date2String","generateArregloSemanas","obtenerHorasRegistradas","projectEstimate","getprojectestimate","horasRegistradas","getprojecthourslog","horasRegistradasExt","getprojecthoursext","Promise","all","horas_registradas_proyecto","sumaTotalGeneral","valueh","push","fila","personExt","listHorasRegistradas","sstate","personal","listHorasRegistradasPersonal","arregloSemana","obtenerHorasPorSemana","inicializarMatriz","arreglo_mes","cantidad_meses","horaRegistrada","registrationDate","dregistration_date","nnumber_hours","resp","obtenerMatrizHorasProjecto","index_mes","semana_pertenece","mes","perteneceSemana","fechaIni","listSemanasStart","listSemanasFinish","thereAreProjectsLoad","start","setDate","getDate","finish","extraDay","getDay","setMilliseconds","setSeconds","setMinutes","setHours","semanas_mes","generateArregloMonth","setMonth","fechaFin","dateuno","abc","abd","newDate","primeraIteracion","sumarPrimeraIteracion","abd2","anio","ini","fin","slice","suma","arreglo_Semanas","totalPorMes","item","selectors","viewQuery","ctx","_r0","_r2","_r9","_r11"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Work\\sgp\\GestionDeProyectos.2023.DEV\\MigracionAngular14\\src\\app\\layout\\manage\\components\\reporte-proyectos\\reporte-proyectos.component.ts","C:\\Users\\Usuario\\Documents\\Work\\sgp\\GestionDeProyectos.2023.DEV\\MigracionAngular14\\src\\app\\layout\\manage\\components\\reporte-proyectos\\reporte-proyectos.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { lastValueFrom, map, Observable, startWith } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { MasterTable } from '../../model/common/mastertable';\r\nimport { DropDownList } from '../../model/dropdownlist/DropDownList';\r\nimport { FilterProjectAssigned } from '../../model/project/filterproject';\r\nimport { ClientService } from '../../services/client/client.service';\r\nimport { MastertableService } from '../../services/common/mastertable.service';\r\nimport { PersonService } from '../../services/person/person.service';\r\nimport { ProjectService } from '../../services/project/project.service';\r\nimport { ProjectTypeService } from '../../services/project/projecttype.service';\r\nimport { PermisoService } from '../../services/common/permiso.service';\r\nimport { User } from '../../model/user/user';\r\nimport { Client } from '../../model/client/client';\r\n\r\nimport * as fs from 'file-saver';\r\nimport * as Excel from \"exceljs/dist/exceljs.min.js\";\r\nimport * as ExcelProper from \"exceljs\";\r\nlet workbook: ExcelProper.Workbook = new Excel.Workbook();\r\n\r\nexport class person{\r\n  nid_person: number = 0;\r\n  sperson: string = \"\";\r\n}\r\n\r\n@Component({\r\n  selector: 'app-reporte-proyectos',\r\n  templateUrl: './reporte-proyectos.component.html',\r\n  styleUrls: ['./reporte-proyectos.component.css']\r\n})\r\nexport class ReporteProyectosComponent implements OnInit {\r\n\r\n  public BreadLevel01 = 'Reportes';\r\n  public Title = 'Reportes de horas por Proyecto';\r\n\r\n  listaPersonas: any[] = [];\r\n\r\n  filterProject: FilterProjectAssigned = new FilterProjectAssigned();\r\n\r\n  user: User = new User();\r\n\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 999;\r\n  totalItems: number = 0;\r\n\r\n  listState: MasterTable[] = [];\r\n  ClientDropDownList: Client[];\r\n  ProjectTypeDropDownList: DropDownList[];\r\n  PersonDropDownList: DropDownList[];\r\n\r\n  listProjectHoursLog: any[] = [];\r\n\r\n  date1String: string = \"\"\r\n  date2String: string = \"\"\r\n\r\n  semanas_meses = [];\r\n  horas_registradas_proyecto = [];\r\n\r\n  sumaTotalGeneral = 0;\r\n\r\n  projectList: any[] = [];\r\n  listProjectFilter: any[] = [];\r\n  \r\n  @ViewChild('table') table: ElementRef;\r\n\r\n  let_mes = new Map([\r\n    [0, \"Enero\"],\r\n    [1, \"Febrero\"],\r\n    [2, \"Marzo\"],\r\n    [3, \"Abril\"],\r\n    [4, \"Mayo\"],\r\n    [5, \"Junio\"],\r\n    [6, \"Julio\"],\r\n    [7, \"Agosto\"],\r\n    [8, \"Septiembre\"],\r\n    [9, \"Octubre\"],\r\n    [10, \"Noviembre\"],\r\n    [11, \"Diciembre\"]\r\n  ])\r\n  \r\n  personExt : person = new person();\r\n\r\n  codigoProyecto: Observable<any[]>;\r\n  nombreProyecto: Observable<any[]>;\r\n\r\n  myControl: FormControl = new FormControl();\r\n  myControll: FormControl = new FormControl();\r\n\r\n  inputNombreServicio = \"\";\r\n\r\n  permisoAdministrador: boolean = false;\r\n  permisoJefeDeProyecto: boolean = false;\r\n\r\n  constructor(\r\n    private spinner: NgxSpinnerService,\r\n    private projectService: ProjectService,\r\n    private mastertableService: MastertableService,\r\n    private clientService: ClientService,\r\n    private personService: PersonService,\r\n    private projectTypeService: ProjectTypeService,\r\n    private permisoService: PermisoService,\r\n  ) {\r\n    this.filterProject.pagination.ItemsPerPage = this.itemsPerPage;\r\n    this.filterProject.pagination.TotalItems = this.totalItems;\r\n    this.filterProject.pagination.CurrentPage = this.currentPage;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerPermisos();\r\n\r\n    if (sessionStorage.getItem('Guard') !== null) {\r\n      this.user = JSON.parse(sessionStorage.getItem('User'));\r\n   }\r\n\r\n    this.codigoProyecto = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map((val: any) => this.filter(val))\r\n      );\r\n\r\n    this.nombreProyecto = this.myControll.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map((val: any) => this.filter2(val))\r\n      );\r\n\r\n  }\r\n\r\n  obtenerPermisos()\r\n  {\r\n    this.permisoService.getpermissionbyuser(20).subscribe((response: any) => {\r\n      console.log(\"permisos\",response)\r\n      response.forEach(element => {\r\n        if(element.sname==\"Permiso_Administrador\"){\r\n          this.permisoAdministrador = element.permission\r\n        }\r\n        if(element.sname==\"Permiso_Jefe_Proyecto\"){\r\n          this.permisoJefeDeProyecto = element.permission\r\n        }\r\n        \r\n      });\r\n\r\n      this.getState();\r\n      this.getProjectTypeDropDown();\r\n      this.getProyectos();\r\n\r\n    }, (error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ExportToExcel()\r\n  {\r\n    const worksheet = workbook.addWorksheet('ReporteFacturacion', {\r\n      views: [{ showGridLines: false }]\r\n    });\r\n\r\n    worksheet.getCell(\"A1\").value = \"Reporte de Horas de Proyecto\";\r\n    const cellA1 = worksheet.getCell(\"A3\");\r\n    cellA1.value = \"Codigo        Proyecto / Servicio\";\r\n    cellA1.alignment = { vertical: 'middle', horizontal: 'center', wrapText: true };\r\n    worksheet.getColumn('A').width = 18;\r\n    worksheet.getRow(3).height = 30\r\n    \r\n    worksheet.getCell(\"B3\").value = this.inputNombreServicio;\r\n    worksheet.getCell(\"B3\").alignment = { vertical: 'middle' };\r\n\r\n    // Cabecera de la tabla\r\n    worksheet.mergeCells(\"B5:B6\");\r\n    worksheet.getCell(\"B5\").value = \"Colaboradores\";\r\n    this.getStyleCabecera(worksheet.getCell(\"B5\"));\r\n    \r\n    worksheet.getColumn('B').width = 40;\r\n    let column_mes_actual = 3\r\n    for(let i= 0; i < this.semanas_meses.length; i++) {\r\n      let startCell = worksheet.getCell(5, column_mes_actual);\r\n      let endCell = worksheet.getCell(5, column_mes_actual + (this.semanas_meses[i][2][0].length));\r\n      column_mes_actual += (this.semanas_meses[i][2][0].length + 1);\r\n      this.getStyleCabecera(startCell);\r\n      startCell.value = this.titleTable(this.semanas_meses[i][0], this.semanas_meses[i][1]);\r\n      worksheet.mergeCells(startCell.address, endCell.address);\r\n    }\r\n\r\n    let column_mes_hijo_actual = 3;\r\n    \r\n    for(let i= 0; i < this.semanas_meses.length; i++) {\r\n      for(let j = 0; j < this.semanas_meses[i][2][0].length; j++) {\r\n        let cell = worksheet.getCell(6, column_mes_hijo_actual)\r\n        column_mes_hijo_actual++;\r\n        \r\n        cell.value = this.subTitleTable(this.semanas_meses[i][2][0][j], this.semanas_meses[i][2][1][j])\r\n        this.getStyleCabecera(cell, 1);\r\n      }\r\n\r\n      let cellTotalMes =  worksheet.getCell(6, column_mes_hijo_actual);\r\n      column_mes_hijo_actual++;\r\n      cellTotalMes.value = \"Total \" + this.let_mes.get(this.semanas_meses[i][0])\r\n      this.getStyleCabecera(cellTotalMes);\r\n\r\n    }\r\n\r\n    worksheet.getColumn(column_mes_hijo_actual).width = 13;\r\n    let startColumnTotalGeneral = worksheet.getCell(5, column_mes_hijo_actual);\r\n    let endColumnTotalGeneral = worksheet.getCell(6, column_mes_hijo_actual);\r\n    startColumnTotalGeneral.value = \"Total General\";\r\n    this.getStyleCabecera(startColumnTotalGeneral);\r\n\r\n    worksheet.mergeCells(startColumnTotalGeneral.address, endColumnTotalGeneral.address);\r\n\r\n\r\n    // Cuerpo de la tabla\r\n\r\n    let rowColaborador = 7;\r\n    for(let i= 0; i < this.listaPersonas.length; i++) {\r\n      let cellColaborador = worksheet.getCell(rowColaborador, 2);\r\n      cellColaborador.value = this.listaPersonas[i].sperson;\r\n\r\n      if(i == this.listaPersonas.length - 1) {\r\n        this.getStyleColaborador(cellColaborador, 1);\r\n      } else {\r\n        this.getStyleColaborador(cellColaborador);\r\n      }\r\n\r\n      let rowValorSemana = 3;\r\n      let semanaporMeses = this.SemanasPorMeses(this.listaPersonas[i].nid_person);\r\n      for(let j= 0; j < semanaporMeses.length; j ++) {\r\n        for( let k = 0; k < semanaporMeses[j].length; k++) {\r\n          let cellValorSemana = worksheet.getCell(rowColaborador, rowValorSemana);\r\n          cellValorSemana.value = semanaporMeses[j][k];\r\n\r\n          if(i == this.listaPersonas.length - 1) {\r\n            if(k == semanaporMeses[j].length - 1) {\r\n              this.getStyleValorTotalPorMes(cellValorSemana, 1);\r\n            } else {\r\n              this.getStyleValorSemana(cellValorSemana, 1);\r\n            }\r\n          } else {\r\n            if(k == semanaporMeses[j].length - 1) {\r\n              this.getStyleValorTotalPorMes(cellValorSemana);\r\n            } else {\r\n              this.getStyleValorSemana(cellValorSemana);\r\n            }\r\n          }\r\n          rowValorSemana++;\r\n        }\r\n      }\r\n      let valorTotalProyecto = worksheet.getCell(rowColaborador, rowValorSemana);\r\n      valorTotalProyecto.value = this.totalPorProyecto(this.listaPersonas[i].nid_person)\r\n\r\n      if(i == this.listaPersonas.length - 1) {\r\n        this.getStyleTotalGeneral(valorTotalProyecto, 1);\r\n      } else {\r\n        this.getStyleTotalGeneral(valorTotalProyecto);\r\n      }\r\n\r\n      rowColaborador ++;\r\n    }\r\n\r\n    // Descargar archivo\r\n    workbook.xlsx.writeBuffer().then((buffer: any) => {\r\n      workbook.removeWorksheet(worksheet.id);\r\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      fs.saveAs(blob, 'ReportePorProyecto.xlsx');\r\n    });\r\n\r\n  }\r\n\r\n\r\n  getStyleCabecera(cell, option?) {\r\n    cell.fill = {\r\n      type: 'pattern',\r\n      pattern: 'solid',\r\n      fgColor: { argb: 'ff022a5b' } \r\n    };\r\n    \r\n    cell.font = {\r\n      color: { argb: 'ffffff' },\r\n      bold: true\r\n    };\r\n\r\n    cell.alignment = {\r\n      horizontal: 'center',\r\n      vertical: 'middle'\r\n    };\r\n    \r\n    if(!option) {    \r\n      cell.border = {\r\n        top: { style: 'thin', color: { argb: '000000' } },\r\n        bottom: { style: 'thin', color: { argb: '000000' } },\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    } else {\r\n      cell.border = {\r\n        top: { style: 'thin', color: { argb: '000000' } },\r\n        bottom: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    }\r\n  }\r\n\r\n  getStyleValorSemana(cell, option?) {\r\n    cell.alignment = {\r\n      horizontal: 'center',\r\n    }; \r\n\r\n    if(option) {    \r\n      cell.border = {\r\n        bottom: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    }\r\n  }\r\n\r\n  getStyleValorTotalPorMes(cell, option?) {\r\n    cell.alignment = {\r\n      horizontal: 'center',\r\n    }; \r\n\r\n    if(!option) {    \r\n      cell.border = {\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    } else {\r\n      cell.border = {\r\n        bottom: { style: 'thin', color: { argb: '000000' } },\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  getStyleTotalGeneral(cell, option?) {\r\n    cell.alignment = {\r\n      horizontal: 'center',\r\n    }; \r\n    \r\n    if(!option) {    \r\n      cell.border = {\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    } else {\r\n      cell.border = {\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } },\r\n        bottom: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    }\r\n  }\r\n\r\n  getStyleColaborador(cell, option?) {\r\n    if(!option) {    \r\n      cell.border = {\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    } else {\r\n      cell.border = {\r\n        left: { style: 'thin', color: { argb: '000000' } },\r\n        right: { style: 'thin', color: { argb: '000000' } },\r\n        bottom: { style: 'thin', color: { argb: '000000' } }\r\n      };\r\n    }\r\n  }\r\n  \r\n  fisrtChange() {\r\n    this.myControl.setValue(\"\");\r\n    this.myControll.setValue(\"\");\r\n  }\r\n\r\n  changeNombreServicio() {\r\n    let proyecto = this.projectList.find(project => project.snameproject == this.inputNombreServicio);\r\n    if(proyecto !== null && proyecto !== undefined) {\r\n      this.filterProject.scodproject = proyecto.scodproject;\r\n    }\r\n  }\r\n\r\n  changeCodigoServicio() {\r\n    console.log(this.filterProject.scodproject);\r\n    let proyecto = this.projectList.find(project => project.scodproject == this.filterProject.scodproject);\r\n    console.log(\"A ver\", proyecto);\r\n    if(proyecto !== null && proyecto !== undefined) {\r\n      this.inputNombreServicio = proyecto.snameproject;\r\n    }\r\n  }\r\n\r\n  changeEstado() {\r\n    if(this.filterProject.nid_status == 0) {\r\n      this.listProjectFilter = this.projectList;\r\n    } else {\r\n      let cadena = this.listState.find(stado => stado.nid_mastertable_type == this.filterProject.nid_status).sshort_value.toUpperCase();\r\n      this.listProjectFilter = this.projectList.filter(proyecto => proyecto.sstatusname.toUpperCase() == cadena);\r\n    }\r\n    this.myControl.setValue(\"\");\r\n    this.myControll.setValue(\"\");\r\n  }\r\n\r\n  filter(val: string): string[] {\r\n    return this.listProjectFilter.filter(project =>\r\n      project.scodproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n\r\n  filter2(val: string): string[] {\r\n    return this.listProjectFilter.filter(project =>\r\n      project.snameproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n\r\n  getProyectos() {\r\n    this.filterProject.nid_manager = 0;\r\n    this.filterProject.nid_status = 0;\r\n    \r\n    if(this.permisoAdministrador) {\r\n      this.filterProject.nid_manager=0;\r\n      this.filterProject.nid_person = 0;\r\n    } else {\r\n      this.filterProject.nid_manager=0;\r\n      this.filterProject.nid_person = this.user.nid_person;\r\n    }\r\n    \r\n    this.spinner.show();\r\n    this.projectService.getassignedprojectpagination(this.filterProject).subscribe(\r\n      (res: any) => {\r\n        try {\r\n          if (res == null) {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Ocurrió un error al obtener los registros.',\r\n              //text: 'Por favor, escríbenos a la siguiente dirección: ' +'comercial@crecerseguros.pe. Nuestro ejecutivo comercial se contactará contigo'\r\n            });\r\n          }\r\n          this.spinner.hide();\r\n          this.projectList = res.data;\r\n          this.listProjectFilter = res.data;\r\n          this.fisrtChange();\r\n          this.totalItems = res.pagination.totalItems;\r\n        } catch (e) {\r\n          this.spinner.hide();\r\n          this.projectList = null;\r\n          this.totalItems = 0;\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getState() {\r\n    this.spinner.show('SpinnerProject');\r\n    //let idFather=this.listCategory.find(x=>x.nid_mastertable_type==id).nid_mastertable;\r\n    this.mastertableService.getmastertable(50).subscribe((response: any) => {\r\n      this.listState = response;\r\n      this.listState = this.listState.filter(x => x.sshort_value == \"ACTIVO\" ||  x.sshort_value == \"CERRADO\")\r\n\r\n      this.spinner.hide('SpinnerProject');\r\n\r\n    }, (error) => {\r\n      console.error(error);\r\n      this.spinner.hide('SpinnerProject');\r\n    });\r\n  }\r\n\r\n  getClientDropDown() {\r\n\r\n    this.spinner.show('SpinnerProject');\r\n    this.clientService.getDropdownlist(0).subscribe((response: any) => {\r\n      if (response == null) {\r\n        this.filterProject.nid_client = 0;\r\n        return;\r\n      }\r\n      this.ClientDropDownList = response;\r\n      if (this.ClientDropDownList.length > 0) {\r\n        this.filterProject.nid_client = 0;\r\n      }\r\n      this.spinner.hide('SpinnerProject');\r\n    }, (error) => {\r\n      console.error(error);\r\n      this.spinner.hide('SpinnerProject');\r\n    });\r\n  }\r\n\r\n  getProjectTypeDropDown() {\r\n\r\n    this.spinner.show('SpinnerProject');\r\n    this.projectTypeService.getDropdownlist().subscribe((response: any) => {\r\n\r\n      if (response == null) {\r\n        this.filterProject.nid_project_type = 0;\r\n        return;\r\n      }\r\n      this.ProjectTypeDropDownList = response;\r\n      if (this.ProjectTypeDropDownList.length > 0) {\r\n        this.filterProject.nid_project_type = 0;\r\n      }\r\n      this.spinner.hide('SpinnerProject');\r\n    }, (error) => {\r\n      console.error(error);\r\n      this.spinner.hide('SpinnerProject');\r\n    });\r\n  }\r\n\r\n  search() {\r\n    console.log(this.filterProject.scodproject);\r\n    let scodproject = this.filterProject.scodproject;\r\n    \r\n    let actualDay = new Date();\r\n    this.date1String = actualDay.getFullYear()  + \"-\" + String(actualDay.getMonth()+1).padStart(2, '0')\r\n    this.date2String = actualDay.getFullYear()  + \"-\" + String(actualDay.getMonth()+1).padStart(2, '0')\r\n\r\n    this.generateArregloSemanas();\r\n\r\n  }\r\n\r\n  obtenerHorasRegistradas(scodproject) {\r\n\r\n    // Obtener los estimados\r\n    var projectEstimate = lastValueFrom(this.projectService.getprojectestimate(scodproject, 2));\r\n    // Obtener horas registradas\r\n    var horasRegistradas = lastValueFrom(this.projectService.getprojecthourslog(scodproject));\r\n    console.log(horasRegistradas);\r\n    // Obtener horas registradas de personal externo y proveedores\r\n    var horasRegistradasExt = lastValueFrom(this.projectService.getprojecthoursext(scodproject));\r\n    \r\n\r\n    Promise.all([projectEstimate, horasRegistradas, horasRegistradasExt]).then((value: any) => {\r\n\r\n      this.horas_registradas_proyecto = [];\r\n      this.sumaTotalGeneral = 0;\r\n\r\n\r\n      // Las personas estimadas\r\n      if (value[0] === null || value[0] === undefined) {\r\n        Swal.fire('Error', \"No hay personal asignado a este proyecto\", 'info');\r\n        return;\r\n      }\r\n      this.listaPersonas = value[0];\r\n\r\n      // Las horas registradas\r\n      let horasRegistradas = value[1];\r\n      if (horasRegistradas === null || horasRegistradas === undefined) {\r\n        //No existen horas registradas en el proyecto\r\n        Swal.fire('Advertencia', \"No hay horas registradas en este proyecto\", 'info');\r\n        return;\r\n      }\r\n      let horasRegistradasExt = value[2];\r\n      console.log(horasRegistradasExt);\r\n      \r\n      if (horasRegistradasExt!=null && horasRegistradasExt!= undefined) {\r\n        horasRegistradasExt.forEach(valueh=>{\r\n          horasRegistradas.push(valueh);\r\n          //if valuex.nid_person no esta dentro de listpersonas\r\n          //entonces listpersonas.push (new object(nid_person:valuex.nid_person,sperson:valuex.sperson))\r\n          let fila = this.listaPersonas.find(x=>x.nid_person==valueh.nid_person)\r\n          console.log(fila);\r\n          \r\n          if(fila==null || fila==undefined){\r\n            this.personExt.nid_person=valueh.nid_person;\r\n            this.personExt.sperson=valueh.sperson;\r\n            this.listaPersonas.push(this.personExt)\r\n            this.personExt = new person();\r\n          }\r\n        })\r\n        console.log(horasRegistradas);\r\n        \r\n      }\r\n\r\n      \r\n\r\n      // Filtro las horas aprobadas\r\n      let listHorasRegistradas: any[] = horasRegistradas.filter(x => x.sstate == \"A\");\r\n      console.log(listHorasRegistradas);\r\n      \r\n\r\n      if (listHorasRegistradas === null || listHorasRegistradas === undefined) {\r\n        Swal.fire('Adventencia', \"No hay horas aprobadas en este proyecto\", 'info');\r\n        return;\r\n      }\r\n\r\n      this.listaPersonas.forEach(personal => {\r\n        let listHorasRegistradasPersonal = listHorasRegistradas.filter(x => x.nid_person == personal.nid_person);\r\n        let arregloSemana = this.obtenerHorasPorSemana(listHorasRegistradasPersonal);\r\n        this.horas_registradas_proyecto.push([personal.nid_person, arregloSemana]);\r\n      })\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  inicializarMatriz() {\r\n    let arreglo_mes = []\r\n\r\n    let cantidad_meses = this.semanas_meses.length;\r\n\r\n    // Inicializo todo en 0\r\n    for (let i = 0; i < cantidad_meses; i++) {\r\n      arreglo_mes[i] = [];\r\n      for (let j = 0; j < this.semanas_meses[i][2][0].length; j++) {\r\n        arreglo_mes[i][j] = 0;\r\n      }\r\n      // este va ser el total\r\n      arreglo_mes[i][this.semanas_meses[i][2][0].length] = 0;\r\n    }\r\n\r\n    return arreglo_mes;\r\n  }\r\n\r\n  obtenerHorasPorSemana(listHorasRegistradas: any[]) {\r\n    let arreglo_mes = this.inicializarMatriz();\r\n\r\n    listHorasRegistradas.forEach(horaRegistrada => {\r\n      let registrationDate: Date = new Date(horaRegistrada.dregistration_date);\r\n      let horasRegistradas = horaRegistrada.nnumber_hours;\r\n      let resp = this.obtenerMatrizHorasProjecto(registrationDate);\r\n\r\n      if (resp != null) {\r\n        arreglo_mes[resp[0]][resp[1]] += horasRegistradas;\r\n        // Sumando a la ultima posicion la cual es el total de la semana\r\n        arreglo_mes[resp[0]][this.semanas_meses[resp[0]][2][0].length] += horasRegistradas;\r\n        // Sumando al total General\r\n        this.sumaTotalGeneral += horasRegistradas;\r\n      }\r\n    });\r\n\r\n    return arreglo_mes;\r\n  }\r\n\r\n  obtenerMatrizHorasProjecto(registrationDate: Date) {\r\n    let index_mes = 0;\r\n\r\n    let semana_pertenece = -1;\r\n\r\n    for (let mes of this.semanas_meses) {\r\n      // Primero tengo que ver a que mes corresponde\r\n      if (mes[0] == registrationDate.getMonth() && mes[1] == registrationDate.getFullYear()) {\r\n        // Si pertenece a este mes, tengo que ver a que semana pertenece\r\n        semana_pertenece = this.perteneceSemana(registrationDate, mes[2][0], mes[2][1])\r\n        break;\r\n      }\r\n      index_mes++;\r\n    };\r\n\r\n    if (semana_pertenece != null && semana_pertenece != -1) {\r\n      return [index_mes, semana_pertenece];\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  perteneceSemana(fechaIni, listSemanasStart, listSemanasFinish) {\r\n    let semana_pertenece = -1;\r\n    // TODO: VERIFICAR QUE LAS HORAS REGISTRADAS SIEMPRE VUELVAN CON HORAS_MINUTOS_SEGUNDOS_MILISEGUNDOS EN 0\r\n    for (let i = 0; i < listSemanasFinish.length; i++) {\r\n      if (fechaIni >= listSemanasStart[i] && fechaIni <= listSemanasFinish[i]) {\r\n        semana_pertenece = i;\r\n        break;\r\n      }\r\n    }\r\n    if (semana_pertenece == -1) {\r\n      console.log(\"No pertence a ninguna semana\", fechaIni, listSemanasStart);\r\n      return null;\r\n    }\r\n    return semana_pertenece\r\n  }\r\n\r\n  generateArregloSemanas() {\r\n    if (!this.thereAreProjectsLoad) {\r\n      return null;\r\n    }\r\n\r\n    let start = new Date(this.date1String);\r\n    start.setDate(start.getDate() + 1)\r\n    let finish = new Date(this.date2String);\r\n    finish.setDate(finish.getDate() + 1)\r\n\r\n    console.log(start, finish);\r\n    \r\n\r\n    this.semanas_meses = [];\r\n    while (start <= finish) {\r\n      let fechaIni: Date = new Date(start);\r\n      let extraDay = 0;\r\n      if (fechaIni.getDay() == 0) {\r\n        extraDay = 1;\r\n      }\r\n      if (fechaIni.getDay() == 6) {\r\n        extraDay = 2;\r\n      }\r\n      fechaIni.setDate(fechaIni.getDate() + extraDay);\r\n      fechaIni.setMilliseconds(0);\r\n      fechaIni.setSeconds(0);\r\n      fechaIni.setMinutes(0);\r\n      fechaIni.setHours(0);\r\n      let semanas_mes = this.generateArregloMonth(fechaIni);\r\n      // [mes(number), año(number), semanas(arreglo, [0]= inicio semana, [1]= fin semana)]\r\n      this.semanas_meses.push([start.getMonth(), start.getFullYear(), semanas_mes])\r\n      start.setMonth(start.getMonth() + 1);\r\n    }\r\n\r\n    this.obtenerHorasRegistradas(this.filterProject.scodproject);\r\n  }\r\n\r\n  generateArregloMonth(fechaIni: Date) {\r\n    let listSemanasStart = [];\r\n    let listSemanasFinish = [];\r\n\r\n    let fechaFin: Date;\r\n\r\n    // Si la semana empieza miercoles la fecha fin de esta semana termina en 3 dias, sabado\r\n    // En el primero no hay ningun problema porque siempre empieza el primero de cada mes por lo que es imposible que cambie de mes en un + dateuno\r\n    let dateuno = 6 - fechaIni.getDay();\r\n\r\n    fechaFin = new Date(fechaIni);\r\n    fechaFin.setDate(fechaFin.getDate() + dateuno);\r\n\r\n\r\n    let abc = new Date(fechaIni.setDate(fechaIni.getDate() + 0));\r\n    let abd = new Date(fechaFin.setDate(fechaFin.getDate() + 0));\r\n\r\n    listSemanasStart.push(abc);\r\n    listSemanasFinish.push(abd);\r\n\r\n    let newDate = new Date(fechaIni.getFullYear(), fechaIni.getMonth() + 1, 0);\r\n    // newDate.setDate(newDate.getDate() + 1);\r\n    let primeraIteracion = true;\r\n    while (fechaFin <= newDate) {\r\n      // Si entra es porque fechaFin aun no es menor que newDate\r\n      let abc;\r\n      if (primeraIteracion) {\r\n        let sumarPrimeraIteracion = 8 - fechaIni.getDay();\r\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + sumarPrimeraIteracion));\r\n        primeraIteracion = false;\r\n      } else {\r\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + 7));\r\n      }\r\n\r\n      let abd;\r\n      if (abc <= newDate) {\r\n        abd = new Date(fechaFin.setDate(fechaFin.getDate() + 7));\r\n        if (abd <= newDate) {\r\n          listSemanasStart.push(abc);\r\n          listSemanasFinish.push(abd);\r\n        } else {\r\n          let abd2 = new Date(fechaFin.setDate(fechaFin.getDate() - 7));\r\n          while (abd2 < newDate) { // Mientras que sea menor, para que en la ultima iteracion quede igual\r\n            abd2.setDate(abd2.getDate() + 1)\r\n          }\r\n          listSemanasStart.push(abc);\r\n          listSemanasFinish.push(abd2);\r\n        }\r\n      } else {\r\n        // Ya no deberia entrar a otra semana si es mayor que el newdate\r\n        fechaFin.setDate(fechaFin.getDate() + 1);\r\n      }\r\n    }\r\n\r\n    return [listSemanasStart, listSemanasFinish]\r\n  }\r\n\r\n  titleTable(mes, anio) {\r\n    return this.let_mes.get(mes) + \"-\" + anio;\r\n  }\r\n\r\n  subTitleTable(ini, fin) {\r\n    return ('0' + ini.getDate()).slice(-2) + \"-\" + ('0' + fin.getDate()).slice(-2);\r\n  }\r\n\r\n  thereAreProjectsLoad(): boolean {\r\n\r\n    if (typeof this.listaPersonas === 'undefined') return false;\r\n    if (this.listaPersonas === null) return false;\r\n    if (this.listaPersonas.length === 0) return false;\r\n    return true;\r\n  }\r\n\r\n\r\n  SemanasPorMeses(nid_person): any[] {\r\n    let proyecto = this.horas_registradas_proyecto.find(x => x[0] == nid_person);\r\n    if (proyecto !== null && proyecto !== undefined) {\r\n      return proyecto[1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  totalPorProyecto(nid_person) {\r\n    let suma = 0;\r\n\r\n    let proyecto = this.horas_registradas_proyecto.find(x => x[0] == nid_person);\r\n    if (proyecto === null || proyecto === undefined) {\r\n      return 0;\r\n    }\r\n\r\n    let arreglo_Semanas = proyecto[1];\r\n\r\n    for (let i = 0; i < arreglo_Semanas.length; i++) {\r\n      suma += arreglo_Semanas[i][arreglo_Semanas[i].length - 1];\r\n    }\r\n    return suma;\r\n  }\r\n\r\n\r\n  totalPorMes(i, j) {\r\n    let suma = 0;\r\n    this.horas_registradas_proyecto.forEach(item => {\r\n      if (item && item[1] && item[1].length > 0 && item[1][i] && item[1][i][j]) {\r\n        suma += item[1][i][j];\r\n      }\r\n    })\r\n    return suma;\r\n  }\r\n\r\n}\r\n","<div class=\"app-content content bg-white\">\r\n  <div class=\"content-wrapper\">\r\n    <!-- INICIO Breadcrumbs -->\r\n    <div class=\"content-header row\">\r\n      <div class=\"content-header-left col-md-6 col-12\">\r\n        <h3 class=\"content-header-title\">{{Title}}</h3>\r\n        <div class=\"row breadcrumbs-top\">\r\n          <div class=\"breadcrumb-wrapper col-12\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/manage/inicio\">Inicio</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/manage/indicador-gestion\">{{BreadLevel01}}</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item active\">{{Title}}\r\n              </li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- FIN Breadcrumbs -->\r\n    <div class=\"content-body\">\r\n      <div class=\"row \">\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\"> FILTROS </h4>\r\n              <a class=\"heading-elements-toggle\"><i class=\"la la-ellipsis-v font-medium-3\"></i></a>\r\n            </div>\r\n\r\n                <div class=\"card-content collapse show\">\r\n                  <div class=\"card-body\">\r\n                      <div class=\"row\">\r\n                        <div class=\"form-group col-md-2 col-sm-12\">\r\n                          <label > Código Proyecto </label>\r\n                          <mat-form-field style=\"width: 100%;\">\r\n                            <input type=\"text\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [(ngModel)]=\"filterProject.scodproject\" [matAutocomplete]=\"auto\" (change)=\"changeCodigoServicio()\">\r\n                            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"changeCodigoServicio()\" >\r\n                              <mat-option *ngFor=\"let option of codigoProyecto | async\" [value]=\"option.scodproject\" style=\"font-size:12px\"> \r\n                                {{ option.scodproject }}\r\n                              </mat-option>\r\n                            </mat-autocomplete>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-3 col-sm-12\">\r\n                          <label > Nombre Proyecto </label>\r\n                          <mat-form-field style=\"width: 100%;\">\r\n                            <input type=\"text\"  aria-label=\"Number\" matInput [formControl]=\"myControll\" [matAutocomplete]=\"auto2\" [(ngModel)]=\"inputNombreServicio\" (change)=\"changeNombreServicio()\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" style=\"width: 300px;\" (optionSelected)=\"changeNombreServicio()\" >\r\n                              <mat-option *ngFor=\"let option of nombreProyecto | async\" [value]=\"option.snameproject\" style=\"font-size:12px\">\r\n                                {{ option.snameproject }}\r\n                              </mat-option>\r\n                            </mat-autocomplete>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"form-group col-md-2 col-sm-12\">\r\n                          <label > Estado </label>\r\n                          <select class=\"select2 form-control block\"   required [(ngModel)]=\"filterProject.nid_status\" (change)=\"changeEstado()\">\r\n                           <option value=\"0\">-- Seleccione --</option>\r\n                           <option *ngFor=\"let item of listState\" [value]=\"item.nid_mastertable_type\">\r\n                            {{item.sshort_value}}</option>\r\n                         </select>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-2 col-sm-12\">\r\n                          <div class=\"form-actions\">\r\n                            <button type=\"button\" class=\"btn btn-outline-info btn-active\" (click)=\"search()\">\r\n                              <i class=\"la la-search\"></i>&nbsp;Consultar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-2 col-sm-12\">\r\n                          <div class=\"form-actions\">\r\n                            <button type=\"button\" (click)=\"ExportToExcel()\" class=\"btn \" style=\"padding: 0; border: none;background: transparent;\">\r\n                              <img style=\"width:24px;height: 24px; \" src=\"../../../../../assets/images/icons/excel1.png\" /> &nbsp;Exportar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-4 input-group\" >\r\n          <input type=\"month\" class=\"form-control\" [(ngModel)]=\"date1String\" (blur)=\"generateArregloSemanas()\" style=\"margin-right: 15px;\">\r\n          <input type=\"month\" class=\"form-control\" [(ngModel)]=\"date2String\" (blur)=\"generateArregloSemanas()\">\r\n        </div>\r\n\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h4 class=\"card-title\">Lista de Resultado</h4>\r\n              <a class=\"heading-elements-toggle\"><i class=\"la la-ellipsis-v font-medium-3\"></i></a>\r\n            </div>\r\n            <div class=\"card-content collapse show\">\r\n              <div class=\"card-body card-dashboard\">\r\n\r\n                <div class=\"row\">\r\n\r\n                  <div class=\"form-group\" style=\"overflow-x:scroll;\">\r\n                    <div class=\"col-md-12\">\r\n\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table table-striped table-bordered\" style=\"table-layout: fixed;\" #table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\" [attr.rowspan]=\"2\" style=\"text-align: center;width: 200px;\">Personal</th>\r\n                              <th [attr.colspan]=\"mes[2][0].length + 1\" style=\"text-align: center;width: 300px;\" *ngFor=\"let mes of semanas_meses; let i = index\">\r\n                                {{ titleTable(mes[0], mes[1])}}\r\n                              </th>\r\n                              <th scope=\"col\" [attr.rowspan]=\"2\" style=\"text-align: center;width: 60px;\">Total</th>\r\n                            </tr>\r\n                            <tr>\r\n                              <ng-container *ngFor=\"let mes of semanas_meses; let i = index\">\r\n                                <ng-container *ngFor=\"let semana of mes[2][0]; let j = index\">\r\n                                  <th style=\"text-align: center;width: 100px;\">{{subTitleTable(semana, mes[2][1][j])}}</th>\r\n                                </ng-container>\r\n                                <th style=\"text-align: center ;width: 60px;\">Total</th>\r\n                              </ng-container>\r\n                            </tr>\r\n                          </thead>\r\n                          <div *ngIf=\"!thereAreProjectsLoad(); then NoexistenRegistro  else MostrarRegistro\"></div>\r\n                          <ng-template #NoexistenRegistro>\r\n                            <tbody>\r\n                              <tr>\r\n                                <td colspan=\"1\" style=\"text-align: center;\">No se encontraron resultados para la\r\n                                  Búsqueda</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </ng-template>\r\n                          <ng-template #MostrarRegistro>\r\n                            <tbody>\r\n                              <tr *ngFor=\"let item of listaPersonas; let i = index\">\r\n                                <td style=\"text-align: center;width: 200px;\">{{item.sperson}} </td>\r\n                                <!-- <td style=\"text-align: center;width: 200px;\">{{item.scodproject}} - {{item.snameproject}} </td> -->\r\n                                <ng-container *ngFor=\"let mes of SemanasPorMeses(item.nid_person); let i = index; \">\r\n                                  <ng-container *ngFor=\"let semana of mes; let i = index; last as isLast\">\r\n                                    <td style=\"text-align: right ;width: 110px;\" [ngStyle]=\"{ 'background-color' : isLast? 'yellow': 'none'}\"> {{semana}} </td>\r\n                                  </ng-container>\r\n                                </ng-container>\r\n                                <td style=\"text-align: right ;width: 60px;\">{{totalPorProyecto(item.nid_person)}}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td style=\"text-align: center;width: 110px; background-color :'#0e3555'; color:white\">Total General</td>\r\n                                <ng-container *ngFor=\"let mes of semanas_meses ; let i = index; \">\r\n                                  <ng-container *ngFor=\"let semana of mes[2][0]; let j = index; last as isLast\">\r\n                                    <td style=\"text-align: right ;width: 110px; background-color :'#0e3555'; color:white\"> {{totalPorMes(i, j)}} </td>\r\n                                  </ng-container>\r\n                                  <td style=\"text-align: right ;width: 110px; background-color :'#0e3555'; color:white\">{{totalPorMes(i,mes[2][0].length)}} </td>\r\n                                </ng-container>\r\n                                <td style=\"text-align: right ;width: 110px; background-color :'#0e3555'; color:white\">{{sumaTotalGeneral}}</td>\r\n                              </tr>\r\n                            </tbody>\r\n\r\n                            <br>\r\n                          </ng-template>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner name=\"SpinnerProject\" bdColor=\"rgba(51,51,51,0.8)\" size=\"large\" color=\"#fff\" type=\"ball-spin-clockwise\"\r\n  [fullScreen]=\"true\">\r\n  <p style=\"color: white\">Please Wait. </p>\r\n</ngx-spinner>"]},"metadata":{},"sourceType":"module"}