{"ast":null,"code":"import { FilterProjectAssigned } from '../../model/project/filterproject';\nimport { FormControl } from '@angular/forms';\nimport { lastValueFrom, map, startWith } from 'rxjs';\nimport { User } from '../../model/user/user';\nimport Swal from 'sweetalert2';\nimport { ProjectStep2, ProjectStep5 } from '../../model/project/project';\nimport { Chart } from 'chart.js/auto';\nimport 'chartjs-plugin-datalabels';\nimport * as jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/common/mastertable.service\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"../../services/project/projecttype.service\";\nimport * as i4 from \"../../services/project/project.service\";\nimport * as i5 from \"../../services/person/person.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/autocomplete\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\n\nfunction ReporteExportablePdfComponent_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 57);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r11.scodproject);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r11.scodproject, \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_mat_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 57);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r12.snameproject);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r12.snameproject, \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 58);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r13.nid_mastertable_type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r13.sshort_value, \"\");\n  }\n}\n\nfunction ReporteExportablePdfComponent_th_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r15 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S\", i_r15 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fecha Inicio: \", i0.ɵɵpipeBind2(4, 2, ctx_r5.listSemanasStart[i_r15], \"dd/MM/yyyy\"), \"\");\n  }\n}\n\nfunction ReporteExportablePdfComponent_th_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 46);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r17 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.listCostoPlanificado[i_r17], \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_th_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 46);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r19 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.listCostoReal[i_r19], \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_th_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r21 = ctx.index;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S\", i_r21 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fecha Inicio: \", i0.ɵɵpipeBind2(4, 2, ctx_r8.listSemanasStart[i_r21], \"dd/MM/yyyy\"), \"\");\n  }\n}\n\nfunction ReporteExportablePdfComponent_tr_101_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r25.nhours_asigned, \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_tr_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ReporteExportablePdfComponent_tr_101_td_3_Template, 2, 1, \"td\", 60);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r22 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", item_r22.sperson, \" ( \", item_r22.srol, \" ) \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.FilterPersonWeek(item_r22.nid_person));\n  }\n}\n\nfunction ReporteExportablePdfComponent_tr_104_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item2_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item2_r30, \" \");\n  }\n}\n\nfunction ReporteExportablePdfComponent_tr_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ReporteExportablePdfComponent_tr_104_td_3_Template, 2, 1, \"td\", 60);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r27 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r27[2], \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r27[1]);\n  }\n}\n\nexport class ReporteExportablePdfComponent {\n  constructor(mastertableService, spinner, projectTypeService, projectService, servicePerson) {\n    this.mastertableService = mastertableService;\n    this.spinner = spinner;\n    this.projectTypeService = projectTypeService;\n    this.projectService = projectService;\n    this.servicePerson = servicePerson;\n    this.BreadLevel01 = 'Reportes';\n    this.Title = 'Reporte exportable en PDF';\n    this.filterProject = new FilterProjectAssigned();\n    this.projectList = [];\n    this.listProjectFilter = [];\n    this.listState = [];\n    this.myControl = new FormControl();\n    this.myControll = new FormControl();\n    this.inputNombreServicio = \"\";\n    this.permisoAdministrador = true;\n    this.user = new User();\n    this.currentPage = 1;\n    this.itemsPerPage = 999;\n    this.totalItems = 0; // Operación\n\n    this.scodproject = \"\";\n    this.projectStep5 = new ProjectStep5();\n    this.listInvoicing = [];\n    this.ingresosReales = 0;\n    this.costoReal = 0;\n    this.costoReal1 = 0;\n    this.listCost = [];\n    this.listprogress = [];\n    this.listAvanceProyecto = [];\n    this.listInvestment = [];\n    this.projectStep2 = new ProjectStep2();\n    this.ListWeekProgressn = [];\n    this.ListWeekPerson = [];\n    this.ncantidadsemanas = 0;\n    this.arrayNumberWeek = [];\n    this.listProjectHoursLog = [];\n    this.listSemanasStart = [];\n    this.listSemanasFinish = [];\n    this.listhoras = [];\n    this.listCostoPlanificado = [];\n    this.listCostoReal = [];\n    this.listProjectEstimate = [];\n    this.cantidad_columnas = 2;\n    this.let_mes = new Map([[0, \"Enero\"], [1, \"Febrero\"], [2, \"Marzo\"], [3, \"Abril\"], [4, \"Mayo\"], [5, \"Junio\"], [6, \"Julio\"], [7, \"Agosto\"], [8, \"Septiembre\"], [9, \"Octubre\"], [10, \"Noviembre\"], [11, \"Diciembre\"]]);\n    this.mesesLabel = [];\n    this.date1String = \"\";\n    this.date2String = \"\";\n    this.dateMax = \"\";\n    this.dateMin = \"\";\n    this.simbMoneda = \"\";\n    this.filterProject.pagination.ItemsPerPage = this.itemsPerPage;\n    this.filterProject.pagination.TotalItems = this.totalItems;\n    this.filterProject.pagination.CurrentPage = this.currentPage;\n  }\n\n  ngOnInit() {\n    this.RenderChart();\n\n    if (sessionStorage.getItem('Guard') !== null) {\n      this.user = JSON.parse(sessionStorage.getItem('User'));\n    }\n\n    this.getState();\n    this.getProjectTypeDropDown();\n    this.getProyectos();\n    this.codigoProyecto = this.myControl.valueChanges.pipe(startWith(''), map(val => this.filter(val)));\n    this.nombreProyecto = this.myControll.valueChanges.pipe(startWith(''), map(val => this.filter2(val)));\n  }\n\n  filter(val) {\n    return this.listProjectFilter.filter(project => project.scodproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n  filter2(val) {\n    return this.listProjectFilter.filter(project => project.snameproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n  changeNombreServicio() {\n    let proyecto = this.projectList.find(project => project.snameproject == this.inputNombreServicio);\n\n    if (proyecto !== null && proyecto !== undefined) {\n      this.filterProject.scodproject = proyecto.scodproject;\n    }\n  }\n\n  changeCodigoServicio() {\n    console.log(this.filterProject.scodproject);\n    let proyecto = this.projectList.find(project => project.scodproject == this.filterProject.scodproject);\n\n    if (proyecto !== null && proyecto !== undefined) {\n      this.inputNombreServicio = proyecto.snameproject;\n    }\n  }\n\n  changeEstado() {\n    if (this.filterProject.nid_status == 0) {\n      this.listProjectFilter = this.projectList;\n    } else {\n      let cadena = this.listState.find(stado => stado.nid_mastertable_type == this.filterProject.nid_status).sshort_value.toUpperCase();\n      this.listProjectFilter = this.projectList.filter(proyecto => proyecto.sstatusname.toUpperCase() == cadena);\n    }\n\n    this.myControl.setValue(\"\");\n    this.myControll.setValue(\"\");\n  }\n\n  fisrtChange() {\n    this.myControl.setValue(\"\");\n    this.myControll.setValue(\"\");\n  }\n\n  getState() {\n    this.spinner.show('SpinnerProject'); //let idFather=this.listCategory.find(x=>x.nid_mastertable_type==id).nid_mastertable;\n\n    this.mastertableService.getmastertable(50).subscribe(response => {\n      this.listState = response;\n      this.listState = this.listState.filter(x => x.sshort_value == \"ACTIVO\" || x.sshort_value == \"CERRADO\");\n      this.spinner.hide('SpinnerProject');\n    }, error => {\n      console.error(error);\n      this.spinner.hide('SpinnerProject');\n    });\n  }\n\n  getProjectTypeDropDown() {\n    this.spinner.show('SpinnerProject');\n    this.projectTypeService.getDropdownlist().subscribe(response => {\n      if (response == null) {\n        this.filterProject.nid_project_type = 0;\n        return;\n      }\n\n      this.ProjectTypeDropDownList = response;\n\n      if (this.ProjectTypeDropDownList.length > 0) {\n        this.filterProject.nid_project_type = 0;\n      }\n\n      this.spinner.hide('SpinnerProject');\n    }, error => {\n      console.error(error);\n      this.spinner.hide('SpinnerProject');\n    });\n  }\n\n  getProyectos() {\n    this.filterProject.nid_manager = 0;\n    this.filterProject.nid_status = 0;\n\n    if (this.permisoAdministrador) {\n      this.filterProject.nid_manager = 0;\n      this.filterProject.nid_person = 0;\n    } else {\n      this.filterProject.nid_manager = 0;\n      this.filterProject.nid_person = this.user.nid_person;\n    }\n\n    this.spinner.show();\n    this.projectService.getassignedprojectpagination(this.filterProject).subscribe(res => {\n      try {\n        if (res == null) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Ocurrió un error al obtener los registros.' //text: 'Por favor, escríbenos a la siguiente dirección: ' +'comercial@crecerseguros.pe. Nuestro ejecutivo comercial se contactará contigo'\n\n          });\n        }\n\n        this.spinner.hide();\n        this.projectList = res.data;\n        this.listProjectFilter = res.data;\n        this.fisrtChange();\n        this.totalItems = res.pagination.totalItems;\n      } catch (e) {\n        this.spinner.hide();\n        this.projectList = null;\n        this.totalItems = 0;\n      }\n    });\n  }\n\n  search() {\n    this.scodproject = this.filterProject.scodproject;\n    this.esperarRespuesta();\n  }\n\n  esperarRespuesta() {\n    var projectStep3 = lastValueFrom(this.projectService.getprojectdtep3(this.scodproject));\n    var projectStep2 = lastValueFrom(this.projectService.getprojectdtep2(this.scodproject));\n    var projectStep5 = lastValueFrom(this.projectService.getprojectdtep5(this.scodproject)); // Devuelve la facturacion\n\n    var facturacionProyecto = lastValueFrom(this.projectService.getprojectinvoicing(this.scodproject)); // Devuelve el costo para cada integrante del proyecto  \n\n    var costoIntegrantes = lastValueFrom(this.servicePerson.getPersonCostByScodproject(this.scodproject)); // Esto devuelve las horas estimadas\n\n    var horasEstimadas = lastValueFrom(this.projectService.getprojectweekperson(this.scodproject)); // La lista de personal estimado\n\n    var personalEstimado = lastValueFrom(this.projectService.getprojectestimate(this.scodproject, 2)); // Devuelve las horas registradas para el proyecto\n\n    var horasRegistradas = lastValueFrom(this.projectService.getprojecthourslog(this.scodproject)); // Devuelve los registros\n\n    var registrosAvanceProject = lastValueFrom(this.projectService.getprojectprogress(this.scodproject)); // Obtener horas registradas de personal externo y proveedores\n\n    var horasRegistradasExt = lastValueFrom(this.projectService.getprojecthoursext(this.scodproject));\n    this.spinner.show('SpinnerProject');\n    Promise.all([projectStep3, projectStep2, costoIntegrantes, horasEstimadas, personalEstimado, horasRegistradas, projectStep5, facturacionProyecto, registrosAvanceProject, horasRegistradasExt]).then(value => {\n      this.spinner.hide('SpinnerProject'); // Step 3, obtiene la lista de estimados, con su costo estimado por rol\n\n      this.listInvestment = value[0].listInvestment; // Step 2\n\n      this.projectStep2 = value[1];\n\n      if (this.projectStep2.ncurrency == 1) {\n        this.simbMoneda = \"S/.\";\n      } else {\n        this.simbMoneda = \"$\";\n      }\n\n      this.date1String = this.projectStep2.dbegin_date.substring(0, 7);\n      this.dateMin = this.projectStep2.dbegin_date.substring(0, 7);\n      this.date2String = this.projectStep2.dfinish_date.substring(0, 7);\n      this.dateMax = this.projectStep2.dfinish_date.substring(0, 7);\n      this.ncantidadsemanas = this.projectStep2.nweeks;\n      this.arrayNumberWeek = new Array(this.ncantidadsemanas);\n      this.generateArregloSemanas(); // Costo Real Integrantes del proyecto\n\n      this.listCost = value[2];\n\n      if (this.listCost === null || this.listCost === undefined) {\n        this.mensajeError(\"Debe asignar personal al proyecto\");\n        return;\n      }\n\n      console.log(\"La lista de costos\", this.listCost);\n      this.listCost.forEach(element => {\n        element.dcost_date = new Date(element.dcost_date);\n      }); // Horas estimadas\n\n      this.ListWeekPerson = value[3]; // Personal\n\n      this.listProjectPersonal = value[4]; // Personal estimado no auxiliar\n\n      this.listProjectEstimate = value[4].filter(x => x.isAuxiliary == false); // Personal Auxiliar\n\n      this.listProjectEstimateAuxiliary = value[4].filter(ls => ls.isAuxiliary == true); // Horas Registradas\n\n      this.calculateCostoPlanificado();\n\n      if (value[5] === null || value[5] === undefined) {\n        this.mensajeError(\"No existen horas registradas en el proyecto\");\n        return;\n      }\n\n      this.listProjectHoursLog = value[5].filter(x => x.sstate == \"A\"); // Step 5\n\n      this.projectStep5 = value[6];\n      console.log(this.projectStep5); // Facturacion del proyecto\n\n      this.listInvoicing = value[7];\n      console.log(this.listInvoicing);\n      this.calculoFacturacion(); // Obtener ultimo registro de avance\n\n      this.listprogress = value[8];\n\n      if (this.listprogress != null && this.listprogress.length >= 1) {\n        this.listAvanceProyecto = this.listprogress[0].listProgressDetail;\n        this.llenarGrafico2();\n      } else {\n        this.listAvanceProyecto = [];\n      }\n\n      if (value[9] != null) {\n        this.listProjectHoursExt = value[9].filter(x => x.sstate == \"A\");\n        console.log(this.listProjectHoursExt);\n      }\n\n      this.calculo();\n      this.calcularCostoReal();\n      this.llenarNuevoGrafico();\n    });\n  }\n\n  calculoFacturacion() {\n    if (this.listInvoicing != null) {\n      this.ingresosReales = 0;\n      this.listInvoicing.forEach(invo => {\n        if (invo.bpaid) {\n          this.ingresosReales += Number(invo.namount);\n        }\n      });\n    } else {\n      this.listInvoicing = [];\n      this.ingresosReales = 0;\n    }\n  }\n\n  generateArregloSemanas() {\n    // Limpiar datos\n    this.listSemanasStart = [];\n    this.listSemanasFinish = [];\n    let fechaIni;\n    let fechaFin;\n    fechaIni = new Date(this.projectStep2.dbegin_date);\n    fechaIni.setDate(fechaIni.getDate() + 1); // Si la semana empieza miercoles la fecha fin de esta semana termina en 3 dias, sabado\n\n    let dateuno = 6 - fechaIni.getDay(); // Si empieza sabado vuela todo XXD\n\n    fechaFin = new Date(this.projectStep2.dbegin_date);\n    fechaFin.setDate(fechaFin.getDate() + (1 + dateuno));\n    let abc = new Date(fechaIni.setDate(fechaIni.getDate() + 0));\n    let abd = new Date(fechaFin.setDate(fechaFin.getDate() + 0));\n    this.listSemanasStart.push(abc);\n    this.listSemanasFinish.push(abd);\n    let newDate = new Date(this.projectStep2.dfinish_date);\n    newDate.setDate(newDate.getDate() + 1);\n    let primeraIteracion = true;\n\n    while (fechaFin <= newDate) {\n      // Si entra es porque fechaFin aun no es menor que newDate\n      let abc;\n\n      if (primeraIteracion) {\n        let sumarPrimeraIteracion = 8 - fechaIni.getDay();\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + sumarPrimeraIteracion));\n        primeraIteracion = false;\n      } else {\n        abc = new Date(fechaIni.setDate(fechaIni.getDate() + 7));\n      }\n\n      let abd;\n\n      if (abc <= newDate) {\n        abd = new Date(fechaFin.setDate(fechaFin.getDate() + 7));\n\n        if (abd <= newDate) {\n          this.listSemanasStart.push(abc);\n          this.listSemanasFinish.push(abd);\n        } else {\n          let abd2 = new Date(fechaFin.setDate(fechaFin.getDate() - 7));\n\n          while (abd2 < newDate) {\n            // Mientras que sea menor, para que en la ultima iteracion quede igual\n            abd2.setDate(abd2.getDate() + 1);\n          }\n\n          this.listSemanasStart.push(abc);\n          this.listSemanasFinish.push(abd2);\n        }\n      } else {\n        // Ya no deberia entrar a otra semana si es mayor que el newdate\n        fechaFin.setDate(fechaFin.getDate() + 1);\n      }\n    }\n\n    this.listhoras = []; // Una vez que obtengo las semana se debe crear el arreglo de horas\n\n    for (let index = 0; index < this.listSemanasStart.length; index++) {\n      this.listhoras[index] = 0;\n      this.listCostoPlanificado[index] = 0;\n      this.listCostoReal[index] = 0;\n    }\n  }\n\n  calculateCostoPlanificado() {\n    for (let i = 0; i < this.ncantidadsemanas; i++) {\n      for (let person of this.listProjectEstimate) {\n        let rol = this.listInvestment.find(x => x.nid_rol == person.nid_rol);\n        let hora_estimada_semana = this.ListWeekPerson.filter(x => x.nweeknumber == i + 1 && x.nid_person == person.nid_person).reduce((sum, current) => Number(sum) + Number(current.nhours_asigned), 0);\n        let costoPlanificado = Number(rol.ncost_per_hour) * Number(hora_estimada_semana);\n        this.listCostoPlanificado[i] += Number(costoPlanificado);\n        this.listCostoPlanificado[i] = Number(this.listCostoPlanificado[i].toFixed(2));\n      }\n    }\n  }\n\n  getCostoReal(nid_person, fechaRegistro) {\n    // Number(this.listCost.find(x=>x.nid_person == nid_person).ncost)\n    var histCost = this.listCost.filter(x => x.nid_person == nid_person);\n    histCost.sort(function (a, b) {\n      return a.dcost_date.getTime() - b.dcost_date.getTime();\n    });\n    var ultima_pos = histCost.length - 1;\n\n    if (ultima_pos < 0) {\n      // show error message\n      console.log(\"No hay costos para esta persona\");\n      return 0;\n    } // La lista ordenada DESC\n\n\n    if (fechaRegistro >= histCost[ultima_pos].dcost_date) {\n      return histCost[ultima_pos].ncost;\n    } else {\n      // Validar a que rango corresponde\n      for (let i = 0; i < ultima_pos; i++) {\n        if (fechaRegistro >= histCost[i].dcost_date && fechaRegistro < histCost[i + 1].dcost_date) {\n          return histCost[i].ncost;\n        }\n      }\n    } // Si llega aca, el algoritmo esta mal xd o un personal registro hora cuando no tenia asignado costo (registra 09/10 y su primer costo registrado es 10/10)\n\n\n    console.log(\"Error algoritmo fallido\");\n    return 0;\n  }\n\n  calculo() {\n    let fechaIni;\n    let horas;\n    let personId;\n    this.personHours = [];\n\n    for (let i = 0; i < this.listProjectHoursLog.length; i++) {\n      fechaIni = new Date(this.listProjectHoursLog[i].dregistration_date);\n      personId = this.listProjectHoursLog[i].nid_person;\n      horas = this.listProjectHoursLog[i].nnumber_hours;\n      let costoReal = this.getCostoReal(personId, fechaIni);\n      let sperson = this.listProjectHoursLog[i].sperson;\n      let existingPerson = this.personHours.find(person => person[0] === personId);\n\n      if (!existingPerson) {\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\n        this.personHours.push([personId, newArrayHoursForPerson, sperson]); // Agregar nueva persona y sus horas\n      }\n\n      this.PerteneceSemana(fechaIni, horas, costoReal, personId);\n    }\n\n    for (let i = 0; i < this.listProjectHoursExt.length; i++) {\n      fechaIni = new Date(this.listProjectHoursExt[i].dregistration_date);\n      personId = this.listProjectHoursExt[i].nid_person;\n      horas = this.listProjectHoursExt[i].nnumber_hours;\n      let costoReal = this.listProjectHoursExt[i].costohora;\n      let sperson = this.listProjectHoursExt[i].sperson;\n      let existingPerson = this.personHours.find(person => person[0] === personId);\n\n      if (!existingPerson) {\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\n        this.personHours.push([personId, newArrayHoursForPerson, sperson]); // Agregar nueva persona y sus horas\n      }\n\n      this.PerteneceSemana(fechaIni, horas, costoReal, personId);\n    } // Lista de todos los integrantes y en caso no este su id dentro de personHours deberia crearles su arreglo con todo 0\n\n\n    for (let i = 0; i < this.listProjectPersonal.length; i++) {\n      let existingPerson2 = this.personHours.find(personHour => personHour[0] == this.listProjectPersonal[i].nid_person);\n\n      if (!existingPerson2) {\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\n        this.personHours.push([personId, newArrayHoursForPerson, this.listProjectPersonal[i].sperson]); // Agregar nueva persona y sus horas\n      }\n    }\n  }\n\n  createArraySemanasWithCeros() {\n    let newArrayHoursForPerson = [];\n\n    for (let index = 0; index < this.listSemanasStart.length; index++) {\n      newArrayHoursForPerson[index] = 0;\n    }\n\n    return newArrayHoursForPerson;\n  }\n\n  PerteneceSemana(fechaIni, horas, costoReal, personId) {\n    let semana_pertenece = -1;\n\n    for (let i = 0; i < this.listSemanasFinish.length; i++) {\n      if (fechaIni >= this.listSemanasStart[i] && fechaIni <= this.listSemanasFinish[i]) {\n        semana_pertenece = i;\n        break;\n      }\n    }\n\n    if (semana_pertenece == -1) {\n      return;\n    }\n\n    this.listhoras[semana_pertenece] += horas;\n    this.listCostoReal[semana_pertenece] += Number(horas * costoReal);\n    this.listCostoReal[semana_pertenece] = Number(this.listCostoReal[semana_pertenece].toFixed(2)); // Agrego horas en las semanas de una persona\n\n    this.personHours.find(person => person[0] === personId)[1][semana_pertenece] += horas;\n  }\n\n  calcularCostoReal() {\n    let fechaRegistro;\n    let horas;\n    this.costoReal = 0;\n\n    for (let i = 0; i < this.listProjectHoursLog.length; i++) {\n      fechaRegistro = new Date(this.listProjectHoursLog[i].dregistration_date);\n      fechaRegistro.setDate(fechaRegistro.getDate() + 1);\n      let costoRealIntegrante = this.getCostoReal(this.listProjectHoursLog[i].nid_person, fechaRegistro);\n      horas = this.listProjectHoursLog[i].nnumber_hours;\n      this.costoReal += Number(costoRealIntegrante) * Number(horas);\n    }\n\n    for (let i = 0; i < this.listProjectHoursExt.length; i++) {\n      horas = this.listProjectHoursExt[i].nnumber_hours;\n      let costoReal = this.listProjectHoursExt[i].costohora;\n      this.costoReal += Number(costoReal) * Number(horas);\n    }\n  }\n\n  FilterPersonWeek(nidperson) {\n    let lista = this.ListWeekPerson.filter(x => x.nid_person == nidperson);\n    return lista.slice(0, this.ncantidadsemanas);\n  }\n\n  mensajeError(message) {\n    Swal.fire('Error', message, 'info');\n  }\n\n  llenarGrafico2() {\n    this.grafico2.data.datasets = [];\n\n    for (let i = 0; i < this.listAvanceProyecto.length; i++) {\n      const tarea = this.listAvanceProyecto[i];\n      const color = tarea.real >= tarea.planificado ? \"#00ff00\" : \"#ff0000\";\n      let newData = {\n        label: tarea.name,\n        data: [{\n          x: tarea.planificado,\n          y: tarea.real\n        }],\n        borderWidth: 1,\n        backgroundColor: [color]\n      };\n      this.grafico2.data.datasets.push(newData);\n    }\n\n    this.grafico2.update();\n  }\n\n  llenarNuevoGrafico() {\n    this.grafico1.data.labels = [];\n    this.grafico1.data.datasets[0].data = [];\n    this.grafico1.data.datasets[1].data = [];\n    this.grafico1.data.labels.push(\"Ingresos\");\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.nexpected_income);\n    this.grafico1.data.datasets[1].data.push(this.ingresosReales);\n    this.grafico1.data.labels.push(\"Costos\");\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.ntotal_investment + this.projectStep5.ntotal_external_cost);\n    this.grafico1.data.datasets[1].data.push(this.costoReal);\n    this.grafico1.data.labels.push(\"Utilidad\");\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.nexpected_utility);\n    this.grafico1.data.datasets[1].data.push(this.ingresosReales - this.costoReal);\n    this.grafico1.update();\n  }\n\n  RenderChart() {\n    this.grafico1 = new Chart(\"barchart1\", {\n      type: 'bar',\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'Esperado',\n          data: [],\n          borderWidth: 1,\n          backgroundColor: [\"#41cfe3\"]\n        }, {\n          label: 'Real',\n          data: [],\n          borderWidth: 1,\n          backgroundColor: [\"#ec7c1c\"]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            // min: 0,\n            // suggestedMax: 100,\n            ticks: {\n              callback: function (value, index, ticks) {\n                return \"S/.\" + Number(value).toFixed(0);\n              }\n            }\n          }\n        },\n        datasets: {\n          bar: {\n            barPercentage: 1\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'RENTABILIDAD DEL PROYECTO'\n          },\n          legend: {\n            position: 'bottom'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = context.dataset.label || '';\n\n                if (label) {\n                  label += ': ';\n                }\n\n                if (context.parsed.y !== null) {\n                  label += \"S/.\" + context.parsed.y.toFixed(2);\n                }\n\n                return label;\n              }\n            }\n          },\n          datalabels: {\n            anchor: 'center',\n            align: 'center',\n            font: {\n              weight: 'bold'\n            },\n            color: '#fff',\n            formatter: function (value, context) {\n              return \"S/.\" + Number(value).toFixed(0);\n            }\n          }\n        }\n      }\n    });\n    this.grafico2 = new Chart('chartCanvas', {\n      type: 'scatter',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'linear',\n            position: 'bottom',\n            min: 0,\n            max: 100,\n            ticks: {\n              callback: function (value, index, ticks) {\n                return Number(value).toFixed(0) + '%';\n              }\n            }\n          },\n          y: {\n            type: 'linear',\n            position: 'left',\n            min: 0,\n            max: 100,\n            ticks: {\n              callback: function (value, index, ticks) {\n                return Number(value).toFixed(0) + '%';\n              }\n            }\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: 'CUMPLIMIENTO DEL CRONOGRAMA'\n          },\n          legend: {\n            position: 'bottom'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = context.dataset.label || '';\n\n                if (label) {\n                  label += ': ';\n                }\n\n                if (context.parsed.x !== null && context.parsed.y !== null) {\n                  const planificado = context.parsed.x;\n                  const real = context.parsed.y;\n                  label += 'Planificado: ' + planificado.toFixed(2) + '%, Real: ' + real.toFixed(2) + '%';\n                }\n\n                return label;\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  downloadAsPDF() {\n    const pdf = new jsPDF(); // Selecciona el elemento HTML que deseas convertir en PDF\n\n    const element = document.getElementById('pruebita'); // Convierte el elemento en una imagen utilizando html2canvas\n\n    html2canvas(element).then(canvas => {\n      const imageData = canvas.toDataURL('image/png'); // Agrega la imagen al PDF\n\n      pdf.addImage(imageData, 'PNG', 10, 10, 190, 0); // Descarga el PDF\n\n      pdf.save('vista.pdf');\n    });\n  }\n\n}\n\nReporteExportablePdfComponent.ɵfac = function ReporteExportablePdfComponent_Factory(t) {\n  return new (t || ReporteExportablePdfComponent)(i0.ɵɵdirectiveInject(i1.MastertableService), i0.ɵɵdirectiveInject(i2.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ProjectTypeService), i0.ɵɵdirectiveInject(i4.ProjectService), i0.ɵɵdirectiveInject(i5.PersonService));\n};\n\nReporteExportablePdfComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReporteExportablePdfComponent,\n  selectors: [[\"app-reporte-exportable-pdf\"]],\n  decls: 116,\n  vars: 26,\n  consts: [[1, \"app-content\", \"content\", \"bg-white\"], [1, \"content-wrapper\"], [1, \"content-header\", \"row\"], [1, \"content-header-left\", \"col-md-6\", \"col-12\"], [1, \"content-header-title\"], [1, \"row\", \"breadcrumbs-top\"], [1, \"breadcrumb-wrapper\", \"col-12\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/manage/inicio\"], [\"routerLink\", \"/manage/indicador-gestion\"], [1, \"breadcrumb-item\", \"active\"], [\"id\", \"pruebita\", 1, \"content-body\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"heading-elements-toggle\"], [1, \"la\", \"la-ellipsis-v\", \"font-medium-3\"], [1, \"card-content\", \"collapse\", \"show\"], [1, \"card-body\"], [1, \"form-group\", \"col-md-2\", \"col-sm-12\"], [2, \"width\", \"100%\"], [\"type\", \"text\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"ngModel\", \"matAutocomplete\", \"ngModelChange\", \"change\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [\"style\", \"font-size:12px\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"col-md-3\", \"col-sm-12\"], [\"type\", \"text\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\", \"ngModel\", \"ngModelChange\", \"change\"], [2, \"width\", \"300px\", 3, \"optionSelected\"], [\"auto2\", \"matAutocomplete\"], [\"required\", \"\", 1, \"select2\", \"form-control\", \"block\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-2\", \"col-sm-12\"], [1, \"form-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-info\", \"btn-active\", 3, \"click\"], [1, \"la\", \"la-search\"], [\"type\", \"button\", 1, \"btn\", 2, \"padding\", \"0\", \"border\", \"none\", \"background\", \"transparent\", 3, \"click\"], [\"src\", \"../../../../../assets/images/icons/excel1.png\", 2, \"width\", \"24px\", \"height\", \"24px\"], [1, \"row\", 2, \"overflow\", \"auto !important\"], [1, \"form-group\"], [1, \"col-md-12\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\", \"table-bordered\", 2, \"table-layout\", \"fixed\"], [2, \"text-align\", \"center\", \"width\", \"200px !important\"], [\"style\", \"text-align: center; width: 80px !important;\", \"class\", \"hasTooltip\", 4, \"ngFor\", \"ngForOf\"], [1, \"hasTooltip2\", 2, \"text-align\", \"center\", \"width\", \"200px !important\"], [\"style\", \"text-align: center; width: 200px !important;\", 4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"center\"], [4, \"ngFor\", \"ngForOf\"], [2, \"height\", \"500px\"], [\"id\", \"barchart1\"], [\"id\", \"chartCanvas\"], [\"name\", \"SpinnerProject\", \"bdColor\", \"rgba(51,51,51,0.8)\", \"size\", \"large\", \"color\", \"#fff\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [2, \"font-size\", \"12px\", 3, \"value\"], [3, \"value\"], [1, \"hasTooltip\", 2, \"text-align\", \"center\", \"width\", \"80px !important\"], [\"style\", \"text-align: center;\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function ReporteExportablePdfComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"ol\", 7)(9, \"li\", 8)(10, \"a\", 9);\n      i0.ɵɵtext(11, \"Inicio\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"li\", 8)(13, \"a\", 10);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"li\", 11);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\", 13)(19, \"div\", 14)(20, \"div\", 15)(21, \"div\", 16)(22, \"h4\", 17);\n      i0.ɵɵtext(23, \" FILTROS \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 18);\n      i0.ɵɵelement(25, \"i\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 20)(27, \"div\", 21)(28, \"div\", 13)(29, \"div\", 22)(30, \"label\");\n      i0.ɵɵtext(31, \" C\\u00F3digo Proyecto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-form-field\", 23)(33, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteExportablePdfComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.filterProject.scodproject = $event;\n      })(\"change\", function ReporteExportablePdfComponent_Template_input_change_33_listener() {\n        return ctx.changeCodigoServicio();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-autocomplete\", 25, 26);\n      i0.ɵɵlistener(\"optionSelected\", function ReporteExportablePdfComponent_Template_mat_autocomplete_optionSelected_34_listener() {\n        return ctx.changeCodigoServicio();\n      });\n      i0.ɵɵtemplate(36, ReporteExportablePdfComponent_mat_option_36_Template, 2, 2, \"mat-option\", 27);\n      i0.ɵɵpipe(37, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 28)(39, \"label\");\n      i0.ɵɵtext(40, \" Nombre Proyecto \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"mat-form-field\", 23)(42, \"input\", 29);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteExportablePdfComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.inputNombreServicio = $event;\n      })(\"change\", function ReporteExportablePdfComponent_Template_input_change_42_listener() {\n        return ctx.changeNombreServicio();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"mat-autocomplete\", 30, 31);\n      i0.ɵɵlistener(\"optionSelected\", function ReporteExportablePdfComponent_Template_mat_autocomplete_optionSelected_43_listener() {\n        return ctx.changeNombreServicio();\n      });\n      i0.ɵɵtemplate(45, ReporteExportablePdfComponent_mat_option_45_Template, 2, 2, \"mat-option\", 27);\n      i0.ɵɵpipe(46, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 22)(48, \"label\");\n      i0.ɵɵtext(49, \" Estado \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"select\", 32);\n      i0.ɵɵlistener(\"ngModelChange\", function ReporteExportablePdfComponent_Template_select_ngModelChange_50_listener($event) {\n        return ctx.filterProject.nid_status = $event;\n      })(\"change\", function ReporteExportablePdfComponent_Template_select_change_50_listener() {\n        return ctx.changeEstado();\n      });\n      i0.ɵɵelementStart(51, \"option\", 33);\n      i0.ɵɵtext(52, \"-- Seleccione --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(53, ReporteExportablePdfComponent_option_53_Template, 2, 2, \"option\", 34);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 35)(55, \"div\", 36)(56, \"button\", 37);\n      i0.ɵɵlistener(\"click\", function ReporteExportablePdfComponent_Template_button_click_56_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelement(57, \"i\", 38);\n      i0.ɵɵtext(58, \"\\u00A0Consultar \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"div\", 35)(60, \"div\", 36)(61, \"button\", 39);\n      i0.ɵɵlistener(\"click\", function ReporteExportablePdfComponent_Template_button_click_61_listener() {\n        return ctx.downloadAsPDF();\n      });\n      i0.ɵɵelement(62, \"img\", 40);\n      i0.ɵɵtext(63, \" \\u00A0Exportar \");\n      i0.ɵɵelementEnd()()()()()()()()();\n      i0.ɵɵelementStart(64, \"div\", 41)(65, \"div\", 42)(66, \"div\", 43)(67, \"div\", 44)(68, \"table\", 45)(69, \"thead\")(70, \"tr\")(71, \"th\", 46);\n      i0.ɵɵtext(72, \"Avances (S/.) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(73, ReporteExportablePdfComponent_th_73_Template, 5, 5, \"th\", 47);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(74, \"tbody\")(75, \"tr\")(76, \"th\", 48);\n      i0.ɵɵtext(77, \" Costo Planificado \");\n      i0.ɵɵelementStart(78, \"span\");\n      i0.ɵɵtext(79, \"Hrs Estimadas * Costo/Hora Estimado\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(80, ReporteExportablePdfComponent_th_80_Template, 2, 1, \"th\", 49);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"tr\")(82, \"th\", 48);\n      i0.ɵɵtext(83, \" Costo Real \");\n      i0.ɵɵelementStart(84, \"span\");\n      i0.ɵɵtext(85, \"Hrs Registradas * Costo/Hora Real\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(86, ReporteExportablePdfComponent_th_86_Template, 2, 1, \"th\", 49);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(87, \"br\");\n      i0.ɵɵelementStart(88, \"div\", 42)(89, \"div\", 43)(90, \"div\", 44)(91, \"table\", 45)(92, \"thead\")(93, \"tr\")(94, \"th\", 46);\n      i0.ɵɵtext(95, \"Avances (Horas) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(96, ReporteExportablePdfComponent_th_96_Template, 5, 5, \"th\", 47);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(97, \"tbody\")(98, \"tr\")(99, \"td\", 50);\n      i0.ɵɵtext(100, \"PLANIFICADO\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(101, ReporteExportablePdfComponent_tr_101_Template, 4, 3, \"tr\", 51);\n      i0.ɵɵelementStart(102, \"td\", 50);\n      i0.ɵɵtext(103, \"REAL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(104, ReporteExportablePdfComponent_tr_104_Template, 4, 2, \"tr\", 51);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(105, \"br\");\n      i0.ɵɵelementStart(106, \"div\", 14)(107, \"div\", 52);\n      i0.ɵɵelement(108, \"canvas\", 53);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(109, \"br\");\n      i0.ɵɵelementStart(110, \"div\", 14)(111, \"div\", 52);\n      i0.ɵɵelement(112, \"canvas\", 54);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(113, \"ngx-spinner\", 55)(114, \"p\", 56);\n      i0.ɵɵtext(115, \"Please Wait. \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(35);\n\n      const _r2 = i0.ɵɵreference(44);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.Title);\n      i0.ɵɵadvance(9);\n      i0.ɵɵtextInterpolate(ctx.BreadLevel01);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.Title, \" \");\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"ngModel\", ctx.filterProject.scodproject)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(37, 22, ctx.codigoProyecto));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControll)(\"matAutocomplete\", _r2)(\"ngModel\", ctx.inputNombreServicio);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(46, 24, ctx.nombreProyecto));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.filterProject.nid_status);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listState);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arrayNumberWeek);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listhoras);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listhoras);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arrayNumberWeek);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"colspan\", ctx.arrayNumberWeek.length + 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listProjectEstimate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"colspan\", ctx.arrayNumberWeek.length + 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.personHours);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"fullScreen\", true);\n    }\n  },\n  dependencies: [i6.RouterLinkWithHref, i7.NgForOf, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.RequiredValidator, i8.NgModel, i8.FormControlDirective, i2.NgxSpinnerComponent, i9.MatAutocomplete, i9.MatAutocompleteTrigger, i10.MatOption, i11.MatFormField, i12.MatInput, i7.AsyncPipe, i7.DatePipe],\n  styles: [\".hasTooltip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    display: none;\\r\\n    color: #000;\\r\\n    text-decoration: none;\\r\\n    padding-top : 3px;\\r\\n    padding-bottom : 3px;\\r\\n}\\r\\n\\r\\n.hasTooltip[_ngcontent-%COMP%]:hover   span[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    background-color: #FFF;\\r\\n    border: 1px solid #CCC;\\r\\n    margin-top: 2px;\\r\\n    margin-left: -47px;\\r\\n}\\r\\n\\r\\n.hasTooltip2[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    display: none;\\r\\n    color: #000;\\r\\n    text-decoration: none;\\r\\n    padding-top : 3px;\\r\\n    padding-bottom : 3px;\\r\\n}\\r\\n\\r\\n.hasTooltip2[_ngcontent-%COMP%]:hover   span[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    background-color: #FFF;\\r\\n    border: 1px solid #CCC;\\r\\n    margin-top: 2px;\\r\\n    margin-left: 50px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG9ydGUtZXhwb3J0YWJsZS1wZGYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJyZXBvcnRlLWV4cG9ydGFibGUtcGRmLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGFzVG9vbHRpcCBzcGFuIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHBhZGRpbmctdG9wIDogM3B4O1xyXG4gICAgcGFkZGluZy1ib3R0b20gOiAzcHg7XHJcbn1cclxuXHJcbi5oYXNUb29sdGlwOmhvdmVyIHNwYW4ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0NDQztcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAtNDdweDtcclxufVxyXG5cclxuLmhhc1Rvb2x0aXAyIHNwYW4ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgcGFkZGluZy10b3AgOiAzcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbSA6IDNweDtcclxufVxyXG5cclxuLmhhc1Rvb2x0aXAyOmhvdmVyIHNwYW4ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0NDQztcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG59Il19 */\"]\n});","map":{"version":3,"mappings":"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","names":["FilterProjectAssigned","FormControl","lastValueFrom","map","startWith","User","Swal","ProjectStep2","ProjectStep5","Chart","jsPDF","html2canvas","i0","ReporteExportablePdfComponent","constructor","mastertableService","spinner","projectTypeService","projectService","servicePerson","Map","filterProject","pagination","ItemsPerPage","itemsPerPage","TotalItems","totalItems","CurrentPage","currentPage","ngOnInit","RenderChart","sessionStorage","getItem","user","JSON","parse","getState","getProjectTypeDropDown","getProyectos","codigoProyecto","myControl","valueChanges","pipe","val","filter","nombreProyecto","myControll","filter2","listProjectFilter","project","scodproject","toLowerCase","indexOf","snameproject","changeNombreServicio","proyecto","projectList","find","inputNombreServicio","undefined","changeCodigoServicio","console","log","changeEstado","nid_status","cadena","listState","stado","nid_mastertable_type","sshort_value","toUpperCase","sstatusname","setValue","fisrtChange","show","getmastertable","subscribe","response","x","hide","error","getDropdownlist","nid_project_type","ProjectTypeDropDownList","length","nid_manager","permisoAdministrador","nid_person","getassignedprojectpagination","res","fire","icon","title","data","e","search","esperarRespuesta","projectStep3","getprojectdtep3","projectStep2","getprojectdtep2","projectStep5","getprojectdtep5","facturacionProyecto","getprojectinvoicing","costoIntegrantes","getPersonCostByScodproject","horasEstimadas","getprojectweekperson","personalEstimado","getprojectestimate","horasRegistradas","getprojecthourslog","registrosAvanceProject","getprojectprogress","horasRegistradasExt","getprojecthoursext","Promise","all","then","value","listInvestment","ncurrency","simbMoneda","date1String","dbegin_date","substring","dateMin","date2String","dfinish_date","dateMax","ncantidadsemanas","nweeks","arrayNumberWeek","Array","generateArregloSemanas","listCost","mensajeError","forEach","element","dcost_date","Date","ListWeekPerson","listProjectPersonal","listProjectEstimate","isAuxiliary","listProjectEstimateAuxiliary","ls","calculateCostoPlanificado","listProjectHoursLog","sstate","listInvoicing","calculoFacturacion","listprogress","listAvanceProyecto","listProgressDetail","llenarGrafico2","listProjectHoursExt","calculo","calcularCostoReal","llenarNuevoGrafico","ingresosReales","invo","bpaid","Number","namount","listSemanasStart","listSemanasFinish","fechaIni","fechaFin","setDate","getDate","dateuno","getDay","abc","abd","push","newDate","primeraIteracion","sumarPrimeraIteracion","abd2","listhoras","index","listCostoPlanificado","listCostoReal","i","person","rol","nid_rol","hora_estimada_semana","nweeknumber","reduce","sum","current","nhours_asigned","costoPlanificado","ncost_per_hour","toFixed","getCostoReal","fechaRegistro","histCost","sort","a","b","getTime","ultima_pos","ncost","horas","personId","personHours","dregistration_date","nnumber_hours","costoReal","sperson","existingPerson","newArrayHoursForPerson","createArraySemanasWithCeros","PerteneceSemana","costohora","existingPerson2","personHour","semana_pertenece","costoRealIntegrante","FilterPersonWeek","nidperson","lista","slice","message","grafico2","datasets","tarea","color","real","planificado","newData","label","name","y","borderWidth","backgroundColor","update","grafico1","labels","nexpected_income","ntotal_investment","ntotal_external_cost","nexpected_utility","type","options","responsive","maintainAspectRatio","scales","beginAtZero","ticks","callback","bar","barPercentage","plugins","display","text","legend","position","tooltip","callbacks","context","dataset","parsed","datalabels","anchor","align","font","weight","formatter","min","max","downloadAsPDF","pdf","document","getElementById","canvas","imageData","toDataURL","addImage","save","selectors","decls","vars","consts","template","ctx","_r0","_r2"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Work\\sgp\\GestionDeProyectos.2023.DEV\\MigracionAngular14\\src\\app\\layout\\manage\\components\\reporte-exportable-pdf\\reporte-exportable-pdf.component.ts","C:\\Users\\Usuario\\Documents\\Work\\sgp\\GestionDeProyectos.2023.DEV\\MigracionAngular14\\src\\app\\layout\\manage\\components\\reporte-exportable-pdf\\reporte-exportable-pdf.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FilterProjectAssigned } from '../../model/project/filterproject';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, lastValueFrom, map, startWith } from 'rxjs';\r\nimport { MasterTable } from '../../model/common/mastertable';\r\nimport { MastertableService } from '../../services/common/mastertable.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { DropDownList } from '../../model/dropdownlist/DropDownList';\r\nimport { ProjectTypeService } from '../../services/project/projecttype.service';\r\nimport { User } from '../../model/user/user';\r\nimport { ProjectService } from '../../services/project/project.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Progress, ProgressDetail, ProjectEstimate, ProjectInvoicing, ProjectStep2, ProjectStep3Investment, ProjectStep5, WeekAvance, WeeksProjectPerson } from '../../model/project/project';\r\nimport { PersonService } from '../../services/person/person.service';\r\nimport { PersonCostHist } from '../../model/person/person.model';\r\nimport { Chart } from 'chart.js/auto';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nimport * as jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\n@Component({\r\n  selector: 'app-reporte-exportable-pdf',\r\n  templateUrl: './reporte-exportable-pdf.component.html',\r\n  styleUrls: ['./reporte-exportable-pdf.component.css']\r\n})\r\nexport class ReporteExportablePdfComponent implements OnInit {\r\n\r\n  public BreadLevel01 = 'Reportes';\r\n  public Title = 'Reporte exportable en PDF';\r\n\r\n  filterProject: FilterProjectAssigned = new FilterProjectAssigned();\r\n\r\n  projectList: any[] = [];\r\n  listProjectFilter: any[] = [];\r\n\r\n  listState: MasterTable[] = [];\r\n  ProjectTypeDropDownList: DropDownList[];\r\n\r\n  codigoProyecto: Observable<any[]>;\r\n  nombreProyecto: Observable<any[]>;\r\n  \r\n  myControl: FormControl = new FormControl();\r\n  myControll: FormControl = new FormControl();\r\n  \r\n  inputNombreServicio = \"\";\r\n\r\n  permisoAdministrador: boolean = true;\r\n  user: User = new User();\r\n\r\n  currentPage: number = 1;\r\n  itemsPerPage: number = 999;\r\n  totalItems: number = 0;\r\n\r\n  grafico1: Chart;\r\n  grafico2: Chart;\r\n  \r\n  // Operación\r\n  scodproject = \"\";\r\n  projectStep5 :ProjectStep5 = new ProjectStep5();\r\n  listInvoicing: ProjectInvoicing[] = [];\r\n  ingresosReales: number = 0;\r\n  costoReal: number = 0;\r\n  costoReal1: number = 0;\r\n  listCost:PersonCostHist[] = [];\r\n\r\n  listprogress: Progress[] = []; \r\n  listAvanceProyecto: ProgressDetail[] = []; \r\n\r\n  listInvestment :ProjectStep3Investment[]=[];\r\n  projectStep2: ProjectStep2 = new ProjectStep2();\r\n  ListWeekProgressn: WeekAvance[] = [];\r\n  ListWeekPerson: WeeksProjectPerson[] = [];\r\n  ncantidadsemanas: number = 0;\r\n  arrayNumberWeek: number[] = [];\r\n  listProjectHoursLog:any[] = [];\r\n\r\n  listSemanasStart: Date[]=[];\r\n  listSemanasFinish: Date[]=[]; \r\n  listhoras: number[]=[];\r\n  listCostoPlanificado: number[]=[];\r\n  listCostoReal: number[]=[];\r\n  \r\n  \r\n  listProjectEstimate:ProjectEstimate[] = [];\r\n  listProjectEstimateAuxiliary: ProjectEstimate[];\r\n  listProjectPersonal: ProjectEstimate[];\r\n\r\n  cantidad_columnas = 2;\r\n  personHours: Array<[any, number[], any]>; \r\n\r\n  let_mes = new Map([\r\n    [0, \"Enero\" ],\r\n    [1, \"Febrero\"],\r\n    [2, \"Marzo\"],\r\n    [3, \"Abril\"],\r\n    [4, \"Mayo\"],\r\n    [5, \"Junio\"],\r\n    [6, \"Julio\"],\r\n    [7, \"Agosto\"],\r\n    [8, \"Septiembre\"],\r\n    [9, \"Octubre\"],\r\n    [10, \"Noviembre\"],\r\n    [11, \"Diciembre\"]\r\n  ])\r\n  mesesLabel: string[] = [];\r\n  \r\n  date1String: string = \"\"\r\n  date2String: string = \"\"\r\n  \r\n  dateMax: string = \"\";\r\n  dateMin: string = \"\";\r\n  \r\n  simbMoneda = \"\";\r\n  listProjectHoursExt: any[];\r\n\r\n\r\n  constructor(\r\n    private mastertableService: MastertableService,\r\n    private spinner: NgxSpinnerService,\r\n    private projectTypeService: ProjectTypeService,\r\n    private projectService: ProjectService,\r\n    private servicePerson: PersonService,\r\n  ) { \r\n    this.filterProject.pagination.ItemsPerPage = this.itemsPerPage;\r\n    this.filterProject.pagination.TotalItems = this.totalItems;\r\n    this.filterProject.pagination.CurrentPage = this.currentPage;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.RenderChart();\r\n\r\n    if (sessionStorage.getItem('Guard') !== null) {\r\n      this.user = JSON.parse(sessionStorage.getItem('User'));\r\n    }\r\n\r\n    this.getState();\r\n    this.getProjectTypeDropDown();\r\n    this.getProyectos();\r\n\r\n    this.codigoProyecto = this.myControl.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map((val: any) => this.filter(val))\r\n    );\r\n\r\n  this.nombreProyecto = this.myControll.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map((val: any) => this.filter2(val))\r\n    );\r\n\r\n\r\n  }\r\n\r\n  filter(val: string): string[] {\r\n    return this.listProjectFilter.filter(project =>\r\n      project.scodproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n\r\n  filter2(val: string): string[] {\r\n    return this.listProjectFilter.filter(project =>\r\n      project.snameproject.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n\r\n  changeNombreServicio() {\r\n    let proyecto = this.projectList.find(project => project.snameproject == this.inputNombreServicio);\r\n    if(proyecto !== null && proyecto !== undefined) {\r\n      this.filterProject.scodproject = proyecto.scodproject;\r\n    }\r\n  }\r\n\r\n  changeCodigoServicio() {\r\n    console.log(this.filterProject.scodproject);\r\n    let proyecto = this.projectList.find(project => project.scodproject == this.filterProject.scodproject);\r\n    if(proyecto !== null && proyecto !== undefined) {\r\n      this.inputNombreServicio = proyecto.snameproject;\r\n    }\r\n  }\r\n\r\n  changeEstado() {\r\n    if(this.filterProject.nid_status == 0) {\r\n      this.listProjectFilter = this.projectList;\r\n    } else {\r\n      let cadena = this.listState.find(stado => stado.nid_mastertable_type == this.filterProject.nid_status).sshort_value.toUpperCase();\r\n      this.listProjectFilter = this.projectList.filter(proyecto => proyecto.sstatusname.toUpperCase() == cadena);\r\n    }\r\n    this.myControl.setValue(\"\");\r\n    this.myControll.setValue(\"\");\r\n  }\r\n\r\n  fisrtChange() {\r\n    this.myControl.setValue(\"\");\r\n    this.myControll.setValue(\"\");\r\n  }\r\n\r\n  getState() {\r\n    this.spinner.show('SpinnerProject');\r\n    //let idFather=this.listCategory.find(x=>x.nid_mastertable_type==id).nid_mastertable;\r\n    this.mastertableService.getmastertable(50).subscribe((response: any) => {\r\n      this.listState = response;\r\n      this.listState = this.listState.filter(x => x.sshort_value == \"ACTIVO\" ||  x.sshort_value == \"CERRADO\")\r\n\r\n      this.spinner.hide('SpinnerProject');\r\n\r\n    }, (error) => {\r\n      console.error(error);\r\n      this.spinner.hide('SpinnerProject');\r\n    });\r\n  }\r\n\r\n  getProjectTypeDropDown() {\r\n\r\n    this.spinner.show('SpinnerProject');\r\n    this.projectTypeService.getDropdownlist().subscribe((response: any) => {\r\n\r\n      if (response == null) {\r\n        this.filterProject.nid_project_type = 0;\r\n        return;\r\n      }\r\n      this.ProjectTypeDropDownList = response;\r\n      if (this.ProjectTypeDropDownList.length > 0) {\r\n        this.filterProject.nid_project_type = 0;\r\n      }\r\n      this.spinner.hide('SpinnerProject');\r\n    }, (error) => {\r\n      console.error(error);\r\n      this.spinner.hide('SpinnerProject');\r\n    });\r\n  }\r\n\r\n  getProyectos() {\r\n    this.filterProject.nid_manager = 0;\r\n    this.filterProject.nid_status = 0;\r\n    \r\n    if(this.permisoAdministrador) {\r\n      this.filterProject.nid_manager=0;\r\n      this.filterProject.nid_person = 0;\r\n    } else {\r\n      this.filterProject.nid_manager=0;\r\n      this.filterProject.nid_person = this.user.nid_person;\r\n    }\r\n    \r\n    this.spinner.show();\r\n    this.projectService.getassignedprojectpagination(this.filterProject).subscribe(\r\n      (res: any) => {\r\n        try {\r\n          if (res == null) {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Ocurrió un error al obtener los registros.',\r\n              //text: 'Por favor, escríbenos a la siguiente dirección: ' +'comercial@crecerseguros.pe. Nuestro ejecutivo comercial se contactará contigo'\r\n            });\r\n          }\r\n          this.spinner.hide();\r\n          this.projectList = res.data;\r\n          this.listProjectFilter = res.data;\r\n          this.fisrtChange();\r\n          this.totalItems = res.pagination.totalItems;\r\n        } catch (e) {\r\n          this.spinner.hide();\r\n          this.projectList = null;\r\n          this.totalItems = 0;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  search(){\r\n    this.scodproject = this.filterProject.scodproject;\r\n    this.esperarRespuesta();\r\n  }\r\n\r\n  esperarRespuesta() {\r\n    var projectStep3 = lastValueFrom(this.projectService.getprojectdtep3(this.scodproject));\r\n    var projectStep2 = lastValueFrom(this.projectService.getprojectdtep2(this.scodproject));\r\n    var projectStep5 = lastValueFrom(this.projectService.getprojectdtep5(this.scodproject));\r\n\r\n    // Devuelve la facturacion\r\n    var facturacionProyecto = lastValueFrom(this.projectService.getprojectinvoicing(this.scodproject));\r\n\r\n    // Devuelve el costo para cada integrante del proyecto  \r\n    var costoIntegrantes = lastValueFrom(this.servicePerson.getPersonCostByScodproject(this.scodproject));\r\n\r\n    // Esto devuelve las horas estimadas\r\n    var horasEstimadas = lastValueFrom(this.projectService.getprojectweekperson(this.scodproject));\r\n\r\n    // La lista de personal estimado\r\n    var personalEstimado = lastValueFrom(this.projectService.getprojectestimate(this.scodproject, 2));\r\n\r\n    // Devuelve las horas registradas para el proyecto\r\n    var horasRegistradas= lastValueFrom(this.projectService.getprojecthourslog(this.scodproject));\r\n\r\n    // Devuelve los registros\r\n    var registrosAvanceProject= lastValueFrom(this.projectService.getprojectprogress(this.scodproject));\r\n\r\n    // Obtener horas registradas de personal externo y proveedores\r\n    var horasRegistradasExt = lastValueFrom(this.projectService.getprojecthoursext(this.scodproject));\r\n\r\n    this.spinner.show('SpinnerProject');\r\n    Promise.all([projectStep3, projectStep2, costoIntegrantes, horasEstimadas, personalEstimado, horasRegistradas, projectStep5, facturacionProyecto, registrosAvanceProject, horasRegistradasExt]).then((value: any) => {\r\n      this.spinner.hide('SpinnerProject');\r\n\r\n\r\n      // Step 3, obtiene la lista de estimados, con su costo estimado por rol\r\n      this.listInvestment = value[0].listInvestment;\r\n      \r\n      // Step 2\r\n      this.projectStep2 = value[1];\r\n      \r\n      if(this.projectStep2.ncurrency == 1) {\r\n        this.simbMoneda = \"S/.\";\r\n      } else {\r\n        this.simbMoneda = \"$\";\r\n      }\r\n\r\n      this.date1String = this.projectStep2.dbegin_date.substring(0,7)\r\n      this.dateMin = this.projectStep2.dbegin_date.substring(0,7);\r\n      this.date2String = this.projectStep2.dfinish_date.substring(0,7);\r\n      this.dateMax = this.projectStep2.dfinish_date.substring(0,7);\r\n      this.ncantidadsemanas = this.projectStep2.nweeks;\r\n      this.arrayNumberWeek = new Array<number>(this.ncantidadsemanas);\r\n      this.generateArregloSemanas();\r\n      \r\n      // Costo Real Integrantes del proyecto\r\n      this.listCost = value[2];\r\n      if(this.listCost === null || this.listCost === undefined) {\r\n        this.mensajeError(\"Debe asignar personal al proyecto\");\r\n        return;\r\n      }\r\n      console.log(\"La lista de costos\", this.listCost);\r\n      \r\n      this.listCost.forEach(element => {\r\n        element.dcost_date = new Date(element.dcost_date);\r\n      });\r\n\r\n      // Horas estimadas\r\n      this.ListWeekPerson = value[3];\r\n      \r\n\r\n      // Personal\r\n      this.listProjectPersonal = value[4];\r\n      // Personal estimado no auxiliar\r\n      this.listProjectEstimate = value[4].filter(x=> x.isAuxiliary == false);\r\n      // Personal Auxiliar\r\n      this.listProjectEstimateAuxiliary = value[4].filter(ls => ls.isAuxiliary == true);\r\n      \r\n      \r\n      // Horas Registradas\r\n      this.calculateCostoPlanificado();\r\n      \r\n      if(value[5]=== null || value[5]=== undefined) {\r\n        this.mensajeError(\"No existen horas registradas en el proyecto\");\r\n        return;\r\n      }\r\n\r\n      this.listProjectHoursLog = value[5].filter(x => x.sstate == \"A\");\r\n\r\n      // Step 5\r\n      this.projectStep5 = value[6];\r\n      console.log(this.projectStep5);\r\n      \r\n      // Facturacion del proyecto\r\n      this.listInvoicing = value[7];\r\n      console.log(this.listInvoicing);\r\n      this.calculoFacturacion();\r\n      \r\n      // Obtener ultimo registro de avance\r\n      this.listprogress = value[8];\r\n      if(this.listprogress != null && this.listprogress.length >= 1) {\r\n        this.listAvanceProyecto = this.listprogress[0].listProgressDetail;\r\n        this.llenarGrafico2();\r\n      } else {\r\n        this.listAvanceProyecto = [];\r\n      }\r\n\r\n      if(value[9]!=null){\r\n        this.listProjectHoursExt = value[9].filter(x => x.sstate == \"A\");\r\n        console.log(this.listProjectHoursExt);     \r\n      }\r\n\r\n    \r\n      this.calculo();\r\n      this.calcularCostoReal();\r\n      this.llenarNuevoGrafico();\r\n\r\n    })\r\n  }\r\n\r\n  calculoFacturacion() {\r\n    if(this.listInvoicing != null) {\r\n      this.ingresosReales = 0;\r\n      this.listInvoicing.forEach(invo => {\r\n        if(invo.bpaid) {\r\n          this.ingresosReales +=  Number(invo.namount);\r\n        }\r\n      })\r\n    } else {\r\n      this.listInvoicing = [];\r\n      this.ingresosReales = 0;\r\n    }\r\n  }\r\n\r\n  generateArregloSemanas() {\r\n    // Limpiar datos\r\n    this.listSemanasStart = [];\r\n    this.listSemanasFinish = [];\r\n\r\n\r\n    let fechaIni;\r\n    let fechaFin;\r\n    fechaIni = new Date(this.projectStep2.dbegin_date);\r\n    fechaIni.setDate(fechaIni.getDate() + 1);\r\n\r\n    // Si la semana empieza miercoles la fecha fin de esta semana termina en 3 dias, sabado\r\n    let dateuno = 6 - fechaIni.getDay();\r\n    // Si empieza sabado vuela todo XXD\r\n    fechaFin = new Date(this.projectStep2.dbegin_date);\r\n    fechaFin.setDate(fechaFin.getDate() + (1+dateuno));\r\n\r\n    let abc = new Date(fechaIni.setDate(fechaIni.getDate() + 0));\r\n    let abd = new Date(fechaFin.setDate(fechaFin.getDate() + 0));\r\n    this.listSemanasStart.push(abc);\r\n    this.listSemanasFinish.push(abd);\r\n\r\n    let newDate = new Date(this.projectStep2.dfinish_date);\r\n    newDate.setDate(newDate.getDate() + 1);\r\n    let primeraIteracion = true;\r\n    while(fechaFin <= newDate){\r\n      // Si entra es porque fechaFin aun no es menor que newDate\r\n      let abc;\r\n      if(primeraIteracion) {\r\n        let sumarPrimeraIteracion = 8 - fechaIni.getDay();\r\n        abc =new Date(fechaIni.setDate(fechaIni.getDate()+sumarPrimeraIteracion));\r\n        primeraIteracion = false;\r\n      } else {\r\n        abc =new Date(fechaIni.setDate(fechaIni.getDate()+7));\r\n      }\r\n\r\n      let abd;         \r\n      if(abc <= newDate) {\r\n        abd =new Date(fechaFin.setDate(fechaFin.getDate()+7));\r\n        if(abd <= newDate) {\r\n          this.listSemanasStart.push(abc);\r\n          this.listSemanasFinish.push(abd);\r\n        } else {\r\n          let abd2 = new Date(fechaFin.setDate(fechaFin.getDate()-7));\r\n          while(abd2 < newDate) { // Mientras que sea menor, para que en la ultima iteracion quede igual\r\n            abd2.setDate(abd2.getDate()+1)\r\n          }\r\n          this.listSemanasStart.push(abc);\r\n          this.listSemanasFinish.push(abd2);\r\n        }\r\n      } else {\r\n        // Ya no deberia entrar a otra semana si es mayor que el newdate\r\n        fechaFin.setDate(fechaFin.getDate()+1);\r\n      }\r\n    }\r\n    this.listhoras = [];\r\n    // Una vez que obtengo las semana se debe crear el arreglo de horas\r\n    \r\n    for (let index = 0; index < this.listSemanasStart.length; index++) {\r\n      this.listhoras[index] = 0;\r\n      this.listCostoPlanificado[index] = 0;\r\n      this.listCostoReal[index] = 0;\r\n    }\r\n  }\r\n\r\n  calculateCostoPlanificado() {\r\n    for(let i=0; i<this.ncantidadsemanas; i++) {\r\n      for(let person of this.listProjectEstimate) {\r\n        let rol = this.listInvestment.find(x=> x.nid_rol == person.nid_rol);\r\n        let hora_estimada_semana = this.ListWeekPerson.filter(x => (x.nweeknumber == i+1 && x.nid_person==person.nid_person)).reduce((sum, current) => Number(sum) + Number(current.nhours_asigned), 0);\r\n        let costoPlanificado = Number(rol.ncost_per_hour) * Number(hora_estimada_semana);\r\n        this.listCostoPlanificado[i] += Number(costoPlanificado);\r\n        this.listCostoPlanificado[i] = Number(this.listCostoPlanificado[i].toFixed(2));\r\n        }\r\n    }\r\n  }\r\n\r\n  getCostoReal(nid_person, fechaRegistro) {\r\n    // Number(this.listCost.find(x=>x.nid_person == nid_person).ncost)\r\n    var histCost = this.listCost.filter(x=>x.nid_person == nid_person);\r\n    histCost.sort(function(a,b): any{\r\n      return a.dcost_date.getTime() - b.dcost_date.getTime();\r\n    });\r\n\r\n    var ultima_pos = histCost.length - 1;\r\n    if(ultima_pos < 0) {\r\n      // show error message\r\n      console.log(\"No hay costos para esta persona\");\r\n      return 0;\r\n    }\r\n    // La lista ordenada DESC\r\n    if(fechaRegistro >= histCost[ultima_pos].dcost_date) {\r\n      return histCost[ultima_pos].ncost;\r\n    } else {\r\n      // Validar a que rango corresponde\r\n      for(let i = 0; i< ultima_pos; i++) {\r\n        if(fechaRegistro >= histCost[i].dcost_date && fechaRegistro < histCost[i+1].dcost_date) {\r\n          return histCost[i].ncost;\r\n        } \r\n      }\r\n    }\r\n    // Si llega aca, el algoritmo esta mal xd o un personal registro hora cuando no tenia asignado costo (registra 09/10 y su primer costo registrado es 10/10)\r\n    console.log(\"Error algoritmo fallido\");\r\n    return 0;\r\n  }\r\n\r\n  calculo(){\r\n    let fechaIni;\r\n    let horas;\r\n    let personId\r\n\r\n    this.personHours = [];\r\n\r\n    for(let i=0; i<this.listProjectHoursLog.length;i++){\r\n      fechaIni = new Date(this.listProjectHoursLog[i].dregistration_date);\r\n\r\n      personId = this.listProjectHoursLog[i].nid_person;\r\n      horas= this.listProjectHoursLog[i].nnumber_hours;\r\n\r\n      let costoReal = this.getCostoReal(personId, fechaIni);\r\n      let sperson = this.listProjectHoursLog[i].sperson;\r\n\r\n      let existingPerson = this.personHours.find((person) => person[0] === personId);\r\n\r\n      if (!existingPerson) {\r\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\r\n        this.personHours.push([personId, newArrayHoursForPerson, sperson]); // Agregar nueva persona y sus horas\r\n      } \r\n\r\n      this.PerteneceSemana(fechaIni,horas, costoReal, personId);\r\n    }\r\n\r\n    for(let i = 0; i< this.listProjectHoursExt.length; i++) {\r\n      fechaIni = new Date(this.listProjectHoursExt[i].dregistration_date);\r\n\r\n      personId = this.listProjectHoursExt[i].nid_person;\r\n      horas= this.listProjectHoursExt[i].nnumber_hours;\r\n\r\n      let costoReal = this.listProjectHoursExt[i].costohora;\r\n      let sperson = this.listProjectHoursExt[i].sperson;\r\n\r\n      let existingPerson = this.personHours.find((person) => person[0] === personId);\r\n\r\n      if (!existingPerson) {\r\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\r\n        this.personHours.push([personId, newArrayHoursForPerson, sperson]); // Agregar nueva persona y sus horas\r\n      } \r\n      this.PerteneceSemana(fechaIni,horas, costoReal, personId);\r\n    }\r\n\r\n    // Lista de todos los integrantes y en caso no este su id dentro de personHours deberia crearles su arreglo con todo 0\r\n    for(let i=0; i< this.listProjectPersonal.length; i++) {\r\n      let existingPerson2 = this.personHours.find((personHour) => personHour[0] == this.listProjectPersonal[i].nid_person);\r\n      if(!existingPerson2) {\r\n        let newArrayHoursForPerson = this.createArraySemanasWithCeros();\r\n        this.personHours.push([personId, newArrayHoursForPerson, this.listProjectPersonal[i].sperson]); // Agregar nueva persona y sus horas\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  createArraySemanasWithCeros() {\r\n    let newArrayHoursForPerson = [];\r\n    for (let index = 0; index < this.listSemanasStart.length; index++) {\r\n      newArrayHoursForPerson[index] = 0;\r\n    }\r\n    return newArrayHoursForPerson;\r\n  }\r\n\r\n  PerteneceSemana(fechaIni,horas,costoReal, personId){\r\n    let semana_pertenece = -1;\r\n    for(let i=0; i<this.listSemanasFinish.length;i++){\r\n      if(fechaIni >=this.listSemanasStart[i] && fechaIni<=this.listSemanasFinish[i]){\r\n        semana_pertenece = i;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if(semana_pertenece == -1) {\r\n      return;\r\n    }\r\n\r\n    this.listhoras[semana_pertenece] += horas;\r\n    this.listCostoReal[semana_pertenece] += Number(horas*costoReal);\r\n    this.listCostoReal[semana_pertenece] = Number(this.listCostoReal[semana_pertenece].toFixed(2));\r\n\r\n    // Agrego horas en las semanas de una persona\r\n    this.personHours.find((person) => person[0] === personId)[1][semana_pertenece] += horas;\r\n  }\r\n\r\n  calcularCostoReal() {\r\n    let fechaRegistro;\r\n    let horas;\r\n    this.costoReal = 0;\r\n\r\n    for(let i=0; i<this.listProjectHoursLog.length;i++){\r\n      fechaRegistro = new Date(this.listProjectHoursLog[i].dregistration_date);\r\n      fechaRegistro.setDate(fechaRegistro.getDate() + 1);\r\n\r\n      let costoRealIntegrante = this.getCostoReal(this.listProjectHoursLog[i].nid_person, fechaRegistro);\r\n      horas = this.listProjectHoursLog[i].nnumber_hours;\r\n      this.costoReal += (Number(costoRealIntegrante) * Number(horas));\r\n    }\r\n\r\n    for(let i = 0; i< this.listProjectHoursExt.length; i++) {\r\n      horas= this.listProjectHoursExt[i].nnumber_hours;\r\n      let costoReal = this.listProjectHoursExt[i].costohora;\r\n      this.costoReal += (Number(costoReal) * Number(horas));\r\n    }\r\n  }\r\n\r\n  FilterPersonWeek(nidperson: number) {\r\n    let lista = this.ListWeekPerson.filter(x => x.nid_person == nidperson);\r\n    return lista.slice(0, this.ncantidadsemanas);\r\n  }\r\n\r\n  mensajeError(message: string) {\r\n    Swal.fire('Error', message, 'info');\r\n  }\r\n\r\n  llenarGrafico2() {\r\n    this.grafico2.data.datasets = [];\r\n\r\n    for (let i = 0; i < this.listAvanceProyecto.length; i++) {\r\n      \r\n      const tarea = this.listAvanceProyecto[i];\r\n\r\n      const color = tarea.real >= tarea.planificado ? \"#00ff00\" : \"#ff0000\";\r\n\r\n      let newData = {\r\n        label: tarea.name,\r\n        data: [{x: tarea.planificado, y: tarea.real}],\r\n        borderWidth: 1,\r\n        backgroundColor: [color],\r\n      }\r\n\r\n      this.grafico2.data.datasets.push(newData);\r\n\r\n    }\r\n    this.grafico2.update();\r\n  }\r\n\r\n  llenarNuevoGrafico() {\r\n    this.grafico1.data.labels = [];\r\n    this.grafico1.data.datasets[0].data = [];\r\n    this.grafico1.data.datasets[1].data = [];\r\n\r\n    this.grafico1.data.labels.push(\"Ingresos\")\r\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.nexpected_income);\r\n    this.grafico1.data.datasets[1].data.push(this.ingresosReales);\r\n    \r\n    this.grafico1.data.labels.push(\"Costos\")\r\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.ntotal_investment + this.projectStep5.ntotal_external_cost);\r\n    this.grafico1.data.datasets[1].data.push(this.costoReal);\r\n\r\n    this.grafico1.data.labels.push(\"Utilidad\")\r\n    this.grafico1.data.datasets[0].data.push(this.projectStep5.nexpected_utility);\r\n    this.grafico1.data.datasets[1].data.push((this.ingresosReales - this.costoReal));\r\n    \r\n    this.grafico1.update();\r\n  }\r\n\r\n  RenderChart() {\r\n    this.grafico1 = new Chart(\"barchart1\", {\r\n      type: 'bar',\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Esperado',\r\n            data: [],\r\n            borderWidth: 1,\r\n            backgroundColor: [\"#41cfe3\"]\r\n          },\r\n          {\r\n            label: 'Real',\r\n            data: [],\r\n            borderWidth: 1,\r\n            backgroundColor: [\"#ec7c1c\"]\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            // min: 0,\r\n            // suggestedMax: 100,\r\n            ticks: {\r\n              callback: function(value, index, ticks) {\r\n                return \"S/.\" + Number(value).toFixed(0);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        datasets: {\r\n          bar: {\r\n            barPercentage: 1\r\n          }\r\n        },\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'RENTABILIDAD DEL PROYECTO'\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n\r\n                if (label) {\r\n                    label += ': ';\r\n                }\r\n                if (context.parsed.y !== null) {\r\n                    label += \"S/.\" +  context.parsed.y.toFixed(2);\r\n                }\r\n                return label;\r\n              }\r\n            }\r\n          },\r\n          datalabels: {\r\n            anchor: 'center',\r\n            align: 'center',\r\n            font: {\r\n              weight: 'bold'\r\n            },\r\n            color: '#fff',\r\n            formatter: function(value, context) {\r\n              return \"S/.\" + Number(value).toFixed(0);\r\n            }\r\n          }\r\n        }\r\n      },\r\n    });\r\n\r\n    this.grafico2 = new Chart('chartCanvas', {\r\n      type: 'scatter',\r\n      data: {\r\n        datasets: []\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'linear',\r\n            position: 'bottom',\r\n            min: 0,\r\n            max: 100,\r\n            ticks: {\r\n              callback: function (value, index, ticks) {\r\n                return Number(value).toFixed(0) + '%';\r\n              }\r\n            }\r\n          },\r\n          y: {\r\n            type: 'linear',\r\n            position: 'left',\r\n            min: 0,\r\n            max: 100,\r\n            ticks: {\r\n              callback: function (value, index, ticks) {\r\n                return Number(value).toFixed(0) + '%';\r\n              }\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'CUMPLIMIENTO DEL CRONOGRAMA'\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function (context) {\r\n                let label = context.dataset.label || '';\r\n      \r\n                if (label) {\r\n                  label += ': ';\r\n                }\r\n                if (context.parsed.x !== null && context.parsed.y !== null) {\r\n                  const planificado = context.parsed.x;\r\n                  const real = context.parsed.y;\r\n      \r\n                  label += 'Planificado: ' + planificado.toFixed(2) + '%, Real: ' + real.toFixed(2) + '%';\r\n                }\r\n                return label;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  downloadAsPDF() {\r\n    const pdf = new jsPDF();\r\n\r\n    // Selecciona el elemento HTML que deseas convertir en PDF\r\n    const element = document.getElementById('pruebita')!;\r\n\r\n    // Convierte el elemento en una imagen utilizando html2canvas\r\n    html2canvas(element).then((canvas) => {\r\n      const imageData = canvas.toDataURL('image/png');\r\n\r\n      // Agrega la imagen al PDF\r\n      pdf.addImage(imageData, 'PNG', 10, 10, 190, 0);\r\n\r\n      // Descarga el PDF\r\n      pdf.save('vista.pdf');\r\n    });\r\n  }\r\n}\r\n","<div class=\"app-content content bg-white\">\r\n    <div class=\"content-wrapper\">\r\n        <!-- INICIO Breadcrumbs -->\r\n        <div class=\"content-header row\">\r\n            <div class=\"content-header-left col-md-6 col-12\">\r\n                <h3 class=\"content-header-title\">{{Title}}</h3>\r\n                <div class=\"row breadcrumbs-top\">\r\n                    <div class=\"breadcrumb-wrapper col-12\">\r\n                        <ol class=\"breadcrumb\">\r\n                            <li class=\"breadcrumb-item\"><a routerLink=\"/manage/inicio\">Inicio</a>\r\n                            </li>\r\n                            <li class=\"breadcrumb-item\"><a routerLink=\"/manage/indicador-gestion\">{{BreadLevel01}}</a>\r\n                            </li>\r\n                            <li class=\"breadcrumb-item active\">{{Title}}\r\n                            </li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- FIN Breadcrumbs -->\r\n        <div class=\"content-body\" id=\"pruebita\">\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h4 class=\"card-title\"> FILTROS </h4>\r\n                            <a class=\"heading-elements-toggle\"><i class=\"la la-ellipsis-v font-medium-3\"></i></a>\r\n                        </div>\r\n\r\n                        <div class=\"card-content collapse show\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"form-group col-md-2 col-sm-12\">\r\n                                        <label> Código Proyecto </label>\r\n                                        <mat-form-field style=\"width: 100%;\">\r\n                                            <input type=\"text\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n                                                [(ngModel)]=\"filterProject.scodproject\" [matAutocomplete]=\"auto\"\r\n                                                (change)=\"changeCodigoServicio()\">\r\n                                            <mat-autocomplete #auto=\"matAutocomplete\"\r\n                                                (optionSelected)=\"changeCodigoServicio()\">\r\n                                                <mat-option *ngFor=\"let option of codigoProyecto | async\"\r\n                                                    [value]=\"option.scodproject\" style=\"font-size:12px\">\r\n                                                    {{ option.scodproject }}\r\n                                                </mat-option>\r\n                                            </mat-autocomplete>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group col-md-3 col-sm-12\">\r\n                                        <label> Nombre Proyecto </label>\r\n                                        <mat-form-field style=\"width: 100%;\">\r\n                                            <input type=\"text\" aria-label=\"Number\" matInput [formControl]=\"myControll\"\r\n                                                [matAutocomplete]=\"auto2\" [(ngModel)]=\"inputNombreServicio\"\r\n                                                (change)=\"changeNombreServicio()\">\r\n                                            <mat-autocomplete #auto2=\"matAutocomplete\" style=\"width: 300px;\"\r\n                                                (optionSelected)=\"changeNombreServicio()\">\r\n                                                <mat-option *ngFor=\"let option of nombreProyecto | async\"\r\n                                                    [value]=\"option.snameproject\" style=\"font-size:12px\">\r\n                                                    {{ option.snameproject }}\r\n                                                </mat-option>\r\n                                            </mat-autocomplete>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group col-md-2 col-sm-12\">\r\n                                        <label> Estado </label>\r\n                                        <select class=\"select2 form-control block\" required\r\n                                            [(ngModel)]=\"filterProject.nid_status\" (change)=\"changeEstado()\">\r\n                                            <option value=\"0\">-- Seleccione --</option>\r\n                                            <option *ngFor=\"let item of listState\" [value]=\"item.nid_mastertable_type\">\r\n                                                {{item.sshort_value}}</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-2 col-sm-12\">\r\n                                        <div class=\"form-actions\">\r\n                                            <button type=\"button\" class=\"btn btn-outline-info btn-active\"\r\n                                                (click)=\"search()\">\r\n                                                <i class=\"la la-search\"></i>&nbsp;Consultar\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-2 col-sm-12\">\r\n                                        <div class=\"form-actions\">\r\n                                            <button type=\"button\" (click)=\"downloadAsPDF()\" class=\"btn \"\r\n                                                style=\"padding: 0; border: none;background: transparent;\">\r\n                                                <img style=\"width:24px;height: 24px; \"\r\n                                                    src=\"../../../../../assets/images/icons/excel1.png\" />\r\n                                                &nbsp;Exportar\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" style=\"overflow: auto !important;\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"table-responsive\" >\r\n                            <table class=\"table table-striped table-bordered\"\r\n                                style=\"table-layout: fixed;\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style=\"text-align: center; width: 200px !important;\">Avances (S/.)\r\n                                        </th>\r\n                                        <th *ngFor=\"let item of arrayNumberWeek; let i = index\"\r\n                                            style=\"text-align: center; width: 80px !important;\"\r\n                                            class=\"hasTooltip\">\r\n                                            S{{i+1}}\r\n                                            <span>Fecha Inicio: {{listSemanasStart[i] | date: 'dd/MM/yyyy'}}</span>\r\n                                          </th>\r\n                                          \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                      <th style=\"text-align: center; width: 200px !important;\" class=\"hasTooltip2\">\r\n                                        Costo Planificado\r\n                                        <span>Hrs Estimadas * Costo/Hora Estimado</span>\r\n                                      </th>\r\n                                        <th *ngFor=\"let item of listhoras; let i = index\"\r\n                                        style=\"text-align: center; width: 200px !important;\">   \r\n                                          {{listCostoPlanificado[i]}}                                                                                      \r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <th style=\"text-align: center; width: 200px !important;\" class=\"hasTooltip2\">\r\n                                        Costo Real\r\n                                        <span>Hrs Registradas * Costo/Hora Real</span>\r\n                                      </th>\r\n                                        <th *ngFor=\"let item of listhoras; let i = index\"\r\n                                        style=\"text-align: center; width: 200px !important;\">   \r\n                                          {{listCostoReal[i]}}                                                                                      \r\n                                        </th>\r\n                                    </tr>                \r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"table-responsive\" >\r\n                            <table class=\"table table-striped table-bordered\"\r\n                                style=\"table-layout: fixed;\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style=\"text-align: center; width: 200px !important;\">Avances (Horas)\r\n                                        </th>\r\n                                        <th *ngFor=\"let item of arrayNumberWeek; let i = index\"\r\n                                            style=\"text-align: center; width: 80px !important;\"\r\n                                            class=\"hasTooltip\">\r\n                                            S{{i+1}}\r\n                                            <span>Fecha Inicio: {{listSemanasStart[i] | date: 'dd/MM/yyyy'}}</span>\r\n                                          </th>\r\n                                          \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td [attr.colspan]=\"(arrayNumberWeek.length + 1)\" style=\"text-align: center;\">PLANIFICADO</td>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let item of listProjectEstimate; let i = index\">\r\n                                        <td style=\"text-align: center;\"> {{item.sperson}} ( {{item.srol}} ) </td>\r\n                                        <td *ngFor=\"let item of FilterPersonWeek(item.nid_person); let i = index\"  style=\"text-align: center;\">\r\n                                            {{item.nhours_asigned}}\r\n                                        </td>\r\n                                    </tr>           \r\n                                    <td [attr.colspan]=\"(arrayNumberWeek.length + 1)\" style=\"text-align: center;\">REAL</td>\r\n                                    <tr *ngFor=\"let item of personHours; let i = index\">\r\n                                        <td style=\"text-align: center;\"> {{item[2]}} </td>\r\n                                        <td *ngFor=\"let item2 of item[1]; let i = index\"  style=\"text-align: center;\">\r\n                                            {{item2}}\r\n                                        </td>\r\n                                    </tr>    \r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"col-lg-12\">\r\n                    <div style=\"height: 500px;\">\r\n                      <canvas id=\"barchart1\">\r\n                      </canvas>\r\n                    </div>\r\n                </div>   \r\n                <br>  \r\n                <div class=\"col-lg-12\">\r\n                    <div style=\"height: 500px;\">\r\n                        <canvas id=\"chartCanvas\"></canvas>\r\n                    </div>\r\n                </div>     \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ngx-spinner name=\"SpinnerProject\" bdColor=\"rgba(51,51,51,0.8)\" size=\"large\" color=\"#fff\" type=\"ball-spin-clockwise\"\r\n    [fullScreen]=\"true\">\r\n    <p style=\"color: white\">Please Wait. </p>\r\n</ngx-spinner>"]},"metadata":{},"sourceType":"module"}